{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/ui/dashboard/nav-links.tsx"],"sourcesContent":["'use client';\r\n\r\nimport {\r\n  UserGroupIcon,\r\n  HomeIcon,\r\n  DocumentDuplicateIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport Link from 'next/link';\r\nimport { usePathname } from 'next/navigation';\r\nimport clsx from 'clsx';\r\n\r\nconst links = [\r\n  { name: 'Home', href: '/dashboard', icon: HomeIcon  },\r\n  { name: 'Users', href: '/dashboard/users', icon: UserGroupIcon },\r\n  { name: 'Projects', href: '/dashboard/project', icon: DocumentDuplicateIcon },\r\n  { name: 'Todos', href: '/dashboard/todo', icon: DocumentDuplicateIcon },\r\n  { name: 'Companies', href: '/dashboard/company', icon: DocumentDuplicateIcon },\r\n];\r\n\r\nexport default function NavLinks() {\r\n  const pathname = usePathname();\r\n  return (\r\n    <>\r\n      {links.map((link) => {\r\n        const LinkIcon = link.icon;\r\n        return (\r\n          <Link\r\n            key={link.name}\r\n            href={link.href}\r\n            className={clsx(\r\n              'flex h-[48px] grow items-center justify-center gap-2 rounded-md bg-gray-50 p-3 text-sm font-medium hover:bg-sky-100 hover:text-blue-600 md:flex-none md:justify-start md:p-2 md:px-3',\r\n              {\r\n                'bg-sky-100 text-blue-600': pathname === link.href,\r\n              },\r\n            )}\r\n          >\r\n            <LinkIcon className=\"w-6\" />\r\n            <p className=\"hidden md:block\">{link.name}</p>\r\n          </Link>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AATA;;;;;;AAWA,MAAM,QAAQ;IACZ;QAAE,MAAM;QAAQ,MAAM;QAAc,MAAM,+MAAA,CAAA,WAAQ;IAAE;IACpD;QAAE,MAAM;QAAS,MAAM;QAAoB,MAAM,yNAAA,CAAA,gBAAa;IAAC;IAC/D;QAAE,MAAM;QAAY,MAAM;QAAsB,MAAM,yOAAA,CAAA,wBAAqB;IAAC;IAC5E;QAAE,MAAM;QAAS,MAAM;QAAmB,MAAM,yOAAA,CAAA,wBAAqB;IAAC;IACtE;QAAE,MAAM;QAAa,MAAM;QAAsB,MAAM,yOAAA,CAAA,wBAAqB;IAAC;CAC9E;AAEc,SAAS;IACtB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,qBACE;kBACG,MAAM,GAAG,CAAC,CAAC;YACV,MAAM,WAAW,KAAK,IAAI;YAC1B,qBACE,8OAAC,4JAAA,CAAA,UAAI;gBAEH,MAAM,KAAK,IAAI;gBACf,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EACZ,wLACA;oBACE,4BAA4B,aAAa,KAAK,IAAI;gBACpD;;kCAGF,8OAAC;wBAAS,WAAU;;;;;;kCACpB,8OAAC;wBAAE,WAAU;kCAAmB,KAAK,IAAI;;;;;;;eAVpC,KAAK,IAAI;;;;;QAapB;;AAGN","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/auth.ts"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport apiClient from '@/app/lib/api';\r\nimport { setAccessToken } from '@/app/lib/api';\r\n\r\ninterface User {\r\n  user_id: number;\r\n  user_name: string;\r\n  password: string;\r\n  phone?: string;\r\n  email: string;\r\n  createdAt?: string;\r\n}\r\n\r\ninterface Task {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  //completed: boolean;\r\n  projectId?: number;\r\n}\r\n\r\ninterface AuthData {\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n  phone?:string;\r\n}\r\n\r\n  // Auth state\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [authMode, setAuthMode] = useState<'login' | 'register'>('login');\r\n  const [authData, setAuthData] = useState<AuthData>({ email: '', password: '', name: '' , phone: ''});\r\n\r\n  // Users state\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [newUser, setNewUser] = useState({ name: '', email: '' });\r\n  const [editingUser, setEditingUser] = useState<User | null>(null);\r\n\r\n  // Tasks state\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [newTask, setNewTask] = useState({ name: '', description: '' });\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n\r\n  // UI state\r\n  const [activeTab, setActiveTab] = useState<'users' | 'tasks'|'company'|'projects'>('users');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Check if user is logged in on component mount\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n  \r\n  // Load data when logged in\r\n  useEffect(() => {\r\n      if (isLoggedIn) {\r\n          fetchUsers();\r\n          fetchTasks();\r\n        }\r\n    }, [isLoggedIn]);\r\n\r\n    // Auth functions\r\n  const checkAuthStatus = async () => {\r\n      try {\r\n          const response = await apiClient.get('/auth/profile');\r\n      setUser(response);\r\n      setIsLoggedIn(true);\r\n    } catch (err) {\r\n        setIsLoggedIn(false);\r\n    }\r\n};\r\n\r\nconst handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n        setLoading(true);\r\n        const response = await apiClient.post('/auth/login', {\r\n            email: authData.email,\r\n            password: authData.password,\r\n      });\r\n      setAccessToken(response.access_token);\r\n      const newUser:User={user_id:response.user.user_id, user_name: response.user.user_name, email: response.user.email, phone: response.user.phone, password: response.user.password};\r\n      console.log(\"Response: \",response.user.user_id, response.user.user_name);\r\n      console.log(\"Response.users: \",response.user);\r\n      setUser(newUser);\r\n      //setUser(response.user);\r\n      console.log(\"Users: \",user);\r\n      setIsLoggedIn(true);\r\n      setAuthData({ email: '', password: '', name: '', phone:''});\r\n      //console.log({email,password});\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Login failed. Please check your credentials.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      const response = await apiClient.post('/users', {\r\n          user_name: authData.name,\r\n          email: authData.email,\r\n        password: authData.password,\r\n        phone:authData.phone,\r\n      });\r\n      setUser(response.user);\r\n      setIsLoggedIn(true);\r\n      setAuthData({ email: '', password: '', name: '', phone:'' });\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Registration failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n};\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n        await apiClient.post('/auth/logout', {});\r\n        setIsLoggedIn(false);\r\n      setUser(null);\r\n      setUsers([]);\r\n      setTasks([]);\r\n    } catch (err) {\r\n        console.error('Logout error:', err);\r\n    }\r\n};\r\n\r\n// Users CRUD functions\r\nconst fetchUsers = async () => {\r\n    try {\r\n        const data = await apiClient.get('/users');\r\n        setUsers(data);\r\n    } catch (err) {\r\n        setError('Failed to fetch users');\r\n    }\r\n};\r\n\r\n// const createUser = async (e: React.FormEvent) => {\r\n    //   e.preventDefault();\r\n    //   try {\r\n        //     const user = await apiClient.post('/users', newUser);\r\n        //     setUsers([...users, user]);\r\n        //     setNewUser({ name: '', email: '' });\r\n        //   } catch (err) {\r\n            //     setError('Failed to create user');\r\n  //   }\r\n  // };\r\n\r\n  const updateUser = async (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n    if (!editingUser) return;\r\n    try {\r\n      const updatedUser = await apiClient.put(`/users/${editingUser.user_id}`, editingUser);\r\n      setUsers(users.map(u => u.user_id === editingUser.user_id ? updatedUser : u));\r\n      setEditingUser(null);\r\n    } catch (err) {\r\n        setError('Failed to update user');\r\n    }\r\n};\r\n\r\nconst deleteUser = async (id: number) => {\r\n    try {\r\n        await apiClient.delete(`/users/${id}`);\r\n        setUsers(users.filter(u => u.user_id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete user');\r\n    }\r\n};\r\n\r\n// Tasks CRUD functions\r\nconst fetchTasks = async () => {\r\n    try {\r\n      const data = await apiClient.get('/tasks');\r\n      setTasks(data);\r\n    } catch (err) {\r\n        setError('Failed to fetch tasks');\r\n    }\r\n};\r\n\r\n  const createTask = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n        const task = await apiClient.post('/tasks', { ...newTask, completed: false });\r\n        setTasks([...tasks, task]);\r\n        setNewTask({ name: '', description: '' });\r\n    } catch (err) {\r\n        setError('Failed to create task');\r\n    }\r\n};\r\n\r\nconst updateTask = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!editingTask) return;\r\n    try {\r\n        const updatedTask = await apiClient.put(`/tasks/${editingTask.id}`, editingTask);\r\n      setTasks(tasks.map(t => t.id === editingTask.id ? updatedTask : t));\r\n      setEditingTask(null);\r\n    } catch (err) {\r\n        setError('Failed to update task');\r\n    }\r\n};\r\n\r\n// const toggleTaskComplete = async (task: Task) => {\r\n    //   try {\r\n        //     const updatedTask = await apiClient.patch(`/tasks/${task.id}`, {\r\n            //       completed: !task.completed\r\n            //     });\r\n            //     setTasks(tasks.map(t => t.id === task.id ? updatedTask : t));\r\n            //   } catch (err) {\r\n                //     setError('Failed to update task status');\r\n                //   }\r\n                // };\r\n\r\n                const deleteTask = async (id: number) => {\r\n                    try {\r\n      await apiClient.delete(`/tasks/${id}`);\r\n      setTasks(tasks.filter(t => t.id !== id));\r\n    } catch (err) {\r\n        setError('Failed to delete task');\r\n    }\r\n};\r\n\r\nexport {deleteTask, updateTask, createTask, fetchTasks, deleteUser, updateUser, fetchUsers, handleLogout, handleLogin, handleRegister, checkAuthStatus}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}