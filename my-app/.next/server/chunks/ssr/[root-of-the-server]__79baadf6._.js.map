{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/ui/dashboard/nav-links.tsx"],"sourcesContent":["'use client';\r\n\r\nimport {\r\n  UserGroupIcon,\r\n  HomeIcon,\r\n  DocumentDuplicateIcon,\r\n  AdjustmentsHorizontalIcon,\r\n  BellIcon,\r\n  ClipboardDocumentListIcon,\r\n  BuildingOffice2Icon,\r\n  WrenchScrewdriverIcon\r\n} from '@heroicons/react/24/outline';\r\nimport Link from 'next/link';\r\nimport { usePathname } from 'next/navigation';\r\nimport clsx from 'clsx';\r\n\r\nconst links = [\r\n  { name: 'Home', href: '/dashboard', icon: HomeIcon  },\r\n  // { name: 'Users', href: '/dashboard/users', icon: UserGroupIcon },\r\n  { name: 'Companies', href: '/dashboard/company', icon: BuildingOffice2Icon },\r\n  { name: 'Projects', href: '/dashboard/project', icon: WrenchScrewdriverIcon },\r\n  { name: 'Task', href: '/dashboard/task', icon: DocumentDuplicateIcon },\r\n  { name: 'Todos', href: '/dashboard/todo', icon: ClipboardDocumentListIcon },\r\n  { name: 'Invites', href: '/dashboard/invites', icon: BellIcon },\r\n  { name: 'Invites', href: '/dashboard/invites', icon: BellIcon },\r\n  { name: 'Admin', href: '/dashboard/admin', icon: UserGroupIcon},\r\n  { name: 'Edit', href: '/dashboard/edit', icon: AdjustmentsHorizontalIcon },\r\n];\r\n\r\nexport default function NavLinks() {\r\n  const pathname = usePathname();\r\n  return (\r\n    <>\r\n      {links.map((link) => {\r\n        const LinkIcon = link.icon;\r\n        return (\r\n          <Link\r\n            key={link.name}\r\n            href={link.href}\r\n            className={clsx(\r\n              'flex h-[48px] grow items-center justify-center gap-2 rounded-md bg-gray-50 p-3 text-sm font-medium hover:bg-sky-100 hover:text-blue-600 md:flex-none md:justify-start md:p-2 md:px-3',\r\n              {\r\n                'bg-sky-100 text-blue-600': pathname === link.href,\r\n              },\r\n            )}\r\n          >\r\n            <LinkIcon className=\"w-6\" />\r\n            <p className=\"hidden md:block\">{link.name}</p>\r\n          </Link>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAdA;;;;;;AAgBA,MAAM,QAAQ;IACZ;QAAE,MAAM;QAAQ,MAAM;QAAc,MAAM,+MAAA,CAAA,WAAQ;IAAE;IACpD,oEAAoE;IACpE;QAAE,MAAM;QAAa,MAAM;QAAsB,MAAM,qOAAA,CAAA,sBAAmB;IAAC;IAC3E;QAAE,MAAM;QAAY,MAAM;QAAsB,MAAM,yOAAA,CAAA,wBAAqB;IAAC;IAC5E;QAAE,MAAM;QAAQ,MAAM;QAAmB,MAAM,yOAAA,CAAA,wBAAqB;IAAC;IACrE;QAAE,MAAM;QAAS,MAAM;QAAmB,MAAM,iPAAA,CAAA,4BAAyB;IAAC;IAC1E;QAAE,MAAM;QAAW,MAAM;QAAsB,MAAM,+MAAA,CAAA,WAAQ;IAAC;IAC9D;QAAE,MAAM;QAAW,MAAM;QAAsB,MAAM,+MAAA,CAAA,WAAQ;IAAC;IAC9D;QAAE,MAAM;QAAS,MAAM;QAAoB,MAAM,yNAAA,CAAA,gBAAa;IAAA;IAC9D;QAAE,MAAM;QAAQ,MAAM;QAAmB,MAAM,iPAAA,CAAA,4BAAyB;IAAC;CAC1E;AAEc,SAAS;IACtB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,qBACE;kBACG,MAAM,GAAG,CAAC,CAAC;YACV,MAAM,WAAW,KAAK,IAAI;YAC1B,qBACE,8OAAC,4JAAA,CAAA,UAAI;gBAEH,MAAM,KAAK,IAAI;gBACf,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EACZ,wLACA;oBACE,4BAA4B,aAAa,KAAK,IAAI;gBACpD;;kCAGF,8OAAC;wBAAS,WAAU;;;;;;kCACpB,8OAAC;wBAAE,WAAU;kCAAmB,KAAK,IAAI;;;;;;;eAVpC,KAAK,IAAI;;;;;QAapB;;AAGN","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/components/NotificationBell.tsx"],"sourcesContent":["// 'use client';\r\n\r\n// import { useState } from 'react';\r\n// import { useWebSocket } from '../context/websocketContext';\r\n\r\n// export default function NotificationBell() {\r\n//   const { notifications, isConnected, markAsRead } = useWebSocket();\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n\r\n//   const unreadCount = notifications.length;\r\n\r\n//   return (\r\n//     <div className=\"relative\">\r\n//       {/* Notification Bell Button */}\r\n//       <button\r\n//         onClick={() => setIsOpen(!isOpen)}\r\n//         className=\"relative p-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n//         title=\"Notifications\"\r\n//       >\r\n//         <svg\r\n//           className=\"w-6 h-6\"\r\n//           fill=\"none\"\r\n//           stroke=\"currentColor\"\r\n//           viewBox=\"0 0 24 24\"\r\n//         >\r\n//           <path\r\n//             strokeLinecap=\"round\"\r\n//             strokeLinejoin=\"round\"\r\n//             strokeWidth={2}\r\n//             d=\"M15 17h5l-5 5v-5z\"\r\n//           />\r\n//           <path\r\n//             strokeLinecap=\"round\"\r\n//             strokeLinejoin=\"round\"\r\n//             strokeWidth={2}\r\n//             d=\"M10 21h4a2 2 0 002-2V7a2 2 0 00-2-2H10a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n//           />\r\n//         </svg>\r\n        \r\n//         {/* Notification Badge */}\r\n//         {unreadCount > 0 && (\r\n//           <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\r\n//             {unreadCount > 9 ? '9+' : unreadCount}\r\n//           </span>\r\n//         )}\r\n        \r\n//         {/* Connection Status Indicator */}\r\n//         <div className={`absolute -bottom-1 -right-1 w-3 h-3 rounded-full ${\r\n//           isConnected ? 'bg-green-500' : 'bg-red-500'\r\n//         }`} title={isConnected ? 'Connected' : 'Disconnected'} />\r\n//       </button>\r\n\r\n//       {/* Notification Dropdown */}\r\n//       {isOpen && (\r\n//         <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\r\n//           <div className=\"p-4 border-b border-gray-200\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-900\">Notifications</h3>\r\n//               <div className=\"flex items-center space-x-2\">\r\n//                 <span className={`w-2 h-2 rounded-full ${\r\n//                   isConnected ? 'bg-green-500' : 'bg-red-500'\r\n//                 }`} />\r\n//                 <span className=\"text-sm text-gray-500\">\r\n//                   {isConnected ? 'Connected' : 'Disconnected'}\r\n//                 </span>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <div className=\"max-h-96 overflow-y-auto\">\r\n//             {notifications.length === 0 ? (\r\n//               <div className=\"p-4 text-center text-gray-500\">\r\n//                 No notifications yet\r\n//               </div>\r\n//             ) : (\r\n//               notifications.map((notification, index) => (\r\n//                 <div\r\n//                   key={index}\r\n//                   className=\"p-4 border-b border-gray-100 hover:bg-gray-50 transition-colors\"\r\n//                 >\r\n//                   <div className=\"flex items-start justify-between\">\r\n//                     <div className=\"flex-1\">\r\n//                       <p className=\"text-sm font-medium text-gray-900\">\r\n//                         {notification.todoTitle || `Todo ${notification.todoId}`}\r\n//                       </p>\r\n//                       <p className=\"text-sm text-gray-600 mt-1\">\r\n//                         {notification.message}\r\n//                       </p>\r\n//                       <div className=\"flex items-center mt-2 text-xs text-gray-500\">\r\n//                         <span>{notification.projectName}</span>\r\n//                         <span className=\"mx-2\">â€¢</span>\r\n//                         <span>\r\n//                           {new Date(notification.timestamp).toLocaleString()}\r\n//                         </span>\r\n//                       </div>\r\n//                     </div>\r\n//                     <button\r\n//                       onClick={() => markAsRead(index)}\r\n//                       className=\"ml-2 text-gray-400 hover:text-gray-600\"\r\n//                       title=\"Mark as read\"\r\n//                     >\r\n//                       <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n//                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n//                       </svg>\r\n//                     </button>\r\n//                   </div>\r\n//                 </div>\r\n//               ))\r\n//             )}\r\n//           </div>\r\n          \r\n//           {notifications.length > 0 && (\r\n//             <div className=\"p-4 border-t border-gray-200\">\r\n//               <button\r\n//                 onClick={() => {\r\n//                   notifications.forEach((_, index) => markAsRead(index));\r\n//                 }}\r\n//                 className=\"text-sm text-blue-600 hover:text-blue-800\"\r\n//               >\r\n//                 Mark all as read\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// } "],"names":[],"mappings":"AAAA,gBAAgB;AAEhB,oCAAoC;AACpC,8DAA8D;AAE9D,+CAA+C;AAC/C,uEAAuE;AACvE,iDAAiD;AAEjD,8CAA8C;AAE9C,aAAa;AACb,iCAAiC;AACjC,yCAAyC;AACzC,gBAAgB;AAChB,6CAA6C;AAC7C,uFAAuF;AACvF,gCAAgC;AAChC,UAAU;AACV,eAAe;AACf,gCAAgC;AAChC,wBAAwB;AACxB,kCAAkC;AAClC,gCAAgC;AAChC,YAAY;AACZ,kBAAkB;AAClB,oCAAoC;AACpC,qCAAqC;AACrC,8BAA8B;AAC9B,oCAAoC;AACpC,eAAe;AACf,kBAAkB;AAClB,oCAAoC;AACpC,qCAAqC;AACrC,8BAA8B;AAC9B,sFAAsF;AACtF,eAAe;AACf,iBAAiB;AAEjB,qCAAqC;AACrC,gCAAgC;AAChC,4IAA4I;AAC5I,qDAAqD;AACrD,oBAAoB;AACpB,aAAa;AAEb,8CAA8C;AAC9C,+EAA+E;AAC/E,wDAAwD;AACxD,oEAAoE;AACpE,kBAAkB;AAElB,sCAAsC;AACtC,qBAAqB;AACrB,iHAAiH;AACjH,2DAA2D;AAC3D,kEAAkE;AAClE,uFAAuF;AACvF,8DAA8D;AAC9D,4DAA4D;AAC5D,gEAAgE;AAChE,yBAAyB;AACzB,2DAA2D;AAC3D,iEAAiE;AACjE,0BAA0B;AAC1B,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AAEnB,uDAAuD;AACvD,8CAA8C;AAC9C,gEAAgE;AAChE,uCAAuC;AACvC,uBAAuB;AACvB,oBAAoB;AACpB,6DAA6D;AAC7D,uBAAuB;AACvB,gCAAgC;AAChC,gGAAgG;AAChG,oBAAoB;AACpB,uEAAuE;AACvE,+CAA+C;AAC/C,0EAA0E;AAC1E,oFAAoF;AACpF,6BAA6B;AAC7B,mEAAmE;AACnE,iDAAiD;AACjD,6BAA6B;AAC7B,uFAAuF;AACvF,kEAAkE;AAClE,0DAA0D;AAC1D,iCAAiC;AACjC,gFAAgF;AAChF,kCAAkC;AAClC,+BAA+B;AAC/B,6BAA6B;AAC7B,8BAA8B;AAC9B,0DAA0D;AAC1D,2EAA2E;AAC3E,6CAA6C;AAC7C,wBAAwB;AACxB,wGAAwG;AACxG,yHAAyH;AACzH,+BAA+B;AAC/B,gCAAgC;AAChC,2BAA2B;AAC3B,yBAAyB;AACzB,mBAAmB;AACnB,iBAAiB;AACjB,mBAAmB;AAEnB,2CAA2C;AAC3C,6DAA6D;AAC7D,wBAAwB;AACxB,mCAAmC;AACnC,4EAA4E;AAC5E,qBAAqB;AACrB,wEAAwE;AACxE,kBAAkB;AAClB,mCAAmC;AACnC,0BAA0B;AAC1B,qBAAqB;AACrB,eAAe;AACf,iBAAiB;AACjB,WAAW;AACX,aAAa;AACb,OAAO;AACP,KAAK","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/ui/dashboard/sidenav.tsx"],"sourcesContent":["'use client'\r\n\r\nimport Link from 'next/link';\r\nimport NavLinks from '@/app/ui/dashboard/nav-links';\r\nimport { PowerIcon } from '@heroicons/react/24/outline';\r\nimport { handleLogout } from '../../../../auth';\r\nimport { useAuth } from '../../../../context/authContext';\r\nimport NotificationBell from '../../../components/NotificationBell';\r\n \r\nexport default function SideNav() {\r\n  const {handleLogout}=useAuth();\r\n  return (\r\n    <div className=\"flex h-full flex-col px-3 py-4 md:px-2\">\r\n      <div className=\"flex grow flex-row justify-between space-x-2 md:flex-col md:space-x-0 md:space-y-2\">\r\n        <NavLinks />\r\n        <div className=\"hidden h-auto w-full grow rounded-md bg-gray-50 md:block\"></div>\r\n        \r\n        {/* Notification Bell */}\r\n        <div className=\"flex items-center justify-center md:justify-start md:p-2 md:px-3\">\r\n          <NotificationBell />\r\n        </div>\r\n        \r\n        <form\r\n          action={async () => {\r\n            //'use server';\r\n            await ({ redirectTo: '/' });\r\n          }}\r\n        >\r\n          <button onClick={handleLogout}  className=\"flex h-[48px] grow items-center justify-center gap-2 rounded-md bg-gray-50 p-3 text-sm font-medium hover:bg-sky-100 hover:text-blue-600 md:flex-none md:justify-start md:p-2 md:px-3\">\r\n            {<PowerIcon className=\"w-6\" /> }\r\n            <div className=\"hidden md:block\">Sign Out</div>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AACA;AAPA;;;;;;AASe,SAAS;IACtB,MAAM,EAAC,YAAY,EAAC,GAAC,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IAC3B,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,8IAAA,CAAA,UAAQ;;;;;8BACT,8OAAC;oBAAI,WAAU;;;;;;8BAGf,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,sIAAA,CAAA,UAAgB;;;;;;;;;;8BAGnB,8OAAC;oBACC,QAAQ;wBACN,eAAe;wBACf,MAAO;4BAAE,YAAY;wBAAI;oBAC3B;8BAEA,cAAA,8OAAC;wBAAO,SAAS;wBAAe,WAAU;;0CACvC,8OAAC,iNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACtB,8OAAC;gCAAI,WAAU;0CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM7C","debugId":null}}]
}