{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/dashboard/notification/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport apiClient from '../../lib/api';\r\nimport { useAuth } from '../../../../context/authContext';\r\n\r\ninterface Notification {\r\n  id: number;\r\n  userId: number;\r\n  message: string;\r\n  todoId?: number;\r\n  projectId?: number;\r\n}\r\n\r\nexport default function NotificationsPage() {\r\n  const [Notifications, setNotifications] = useState<Notification[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const { user } = useAuth();\r\n  const userId = user?.user_id;\r\n  //const userId = 3;\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const data = await apiClient.get(`/user-todo/${userId}`);\r\n        setNotifications(data);\r\n      } catch (err) {\r\n        setError('Failed to fetch Notifications');\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">My Notifications</h2>\r\n\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      <ul className=\"space-y-4\">\r\n        {/* {Notifications.map((notis) => (\r\n        //   <li\r\n        //     key={Notifications.}\r\n        //     className=\"p-4 border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition\"\r\n        //   >\r\n        //     <h3 className=\"text-lg font-medium text-blue-700\">{todo.todo_name}</h3>\r\n        //     <p className=\"text-sm text-gray-600\">{todo.todo_description || 'No description'}</p>\r\n        //     <div className=\"text-sm text-gray-500 mt-2\">\r\n        //       {todo.due_date && <p>Due: {new Date(todo.due_date).toLocaleDateString()}</p>}\r\n        //       <p>Status: {todo.todo_status || 'Pending'}</p>\r\n        //       <p>Priority: {todo.todo_priority || 'N/A'}</p>\r\n        //       <p>Task ID: {todo.task_id}</p>\r\n        //     </div>\r\n        //   </li>\r\n\r\n        )\r\n        )} */}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAce,SAAS;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACrE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IACvB,MAAM,SAAS,MAAM;IACrB,mBAAmB;IAEnB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,qBAAqB;YACzB,IAAI;gBACF,MAAM,OAAO,MAAM,wHAAA,CAAA,UAAS,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,QAAQ;gBACvD,iBAAiB;YACnB,EAAE,OAAO,KAAK;gBACZ,SAAS;YACX;QACF;QAEA;IACF,GAAG;QAAC;KAAO;IAEX,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA8B;;;;;;YAE3C,uBAAS,8OAAC;gBAAE,WAAU;0BAAqB;;;;;;0BAE5C,8OAAC;gBAAG,WAAU;;;;;;;;;;;;AAqBpB","debugId":null}}]
}