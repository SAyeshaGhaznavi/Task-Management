{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_59dee874.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_59dee874-module__9CtR0q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/context/authContext.tsx"],"sourcesContent":["// 'use client';\r\n\r\n// import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n// import apiClient, { setAccessToken } from '@/app/lib/api';\r\n\r\n// interface User {\r\n//   user_id: number;\r\n//   user_name: string;\r\n//   password: string;\r\n//   phone?: string;\r\n//   email: string;\r\n//   createdAt?: string;\r\n// }\r\n\r\n// interface Task {\r\n//   id: number;\r\n//   name: string;\r\n//   description: string;\r\n//   projectId?: number;\r\n// }\r\n\r\n// interface AuthData {\r\n//   email: string;\r\n//   password: string;\r\n//   name?: string;\r\n//   phone?: string;\r\n// }\r\n\r\n// interface AuthContextType {\r\n//   user: User | null;\r\n//   error: string | null;\r\n//   isLoggedIn: boolean;\r\n//   setUser: (u: User | null) => void;\r\n//   handleLogin: (e: React.FormEvent) => Promise<void>;\r\n//   handleLogout: () => Promise<void>;\r\n//   handleRegister: (e: React.FormEvent) => Promise<void>;\r\n//   checkAuthStatus: () => Promise<void>;\r\n//   users: User[];\r\n//   fetchUsers: () => Promise<void>;\r\n//   updateUser: (e: React.FormEvent) => Promise<void>;\r\n//   deleteUser: (id: number) => Promise<void>;\r\n//   tasks: Task[];\r\n//   fetchTasks: () => Promise<void>;\r\n//   createTask: (e: React.FormEvent) => Promise<void>;\r\n//   updateTask: (e: React.FormEvent) => Promise<void>;\r\n//   deleteTask: (id: number) => Promise<void>;\r\n//   authData: AuthData;\r\n//   setAuthData: React.Dispatch<React.SetStateAction<AuthData>>;\r\n// }\r\n\r\n\r\n\r\n// const AuthContext = createContext<AuthContextType | null>(null);\r\n\r\n// export const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n//   const [user, setUser] = useState<User | null>(null);\r\n//   const [authData, setAuthData] = useState<AuthData>({ email: '', password: '', name: '', phone: '' });\r\n//   const [users, setUsers] = useState<User[]>([]);\r\n//   const [tasks, setTasks] = useState<Task[]>([]);\r\n//   const [editingUser, setEditingUser] = useState<User | null>(null);\r\n//   const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   useEffect(() => {\r\n//     checkAuthStatus();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (isLoggedIn) {\r\n//       fetchUsers();\r\n//       fetchTasks();\r\n//     }\r\n//   }, [isLoggedIn]);\r\n\r\n//   const checkAuthStatus = async () => {\r\n//     try {\r\n//       const response = await apiClient.get('/auth/profile');\r\n//       setUser(response);\r\n//       setIsLoggedIn(true);\r\n//     } catch {\r\n//       setIsLoggedIn(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleLogin = async (e: React.FormEvent) => {\r\n//     try {\r\n//         e.preventDefault();\r\n//         const response = await apiClient.post('/auth/login', {\r\n//           email: authData.email,\r\n//           password: authData.password,\r\n//         });\r\n//         setAccessToken(response.access_token);\r\n//         setUser({\r\n//           user_id: response.user.user_id,\r\n//           user_name: response.user.user_name,\r\n//           email: response.user.email,\r\n//           phone: response.user.phone,\r\n//           password: response.user.password,\r\n//         });\r\n//         console.log(\"User: \", user);\r\n//         setIsLoggedIn(true);\r\n//         setAuthData({ email: '', password: '', name: '', phone: '' });\r\n//         setError(null);\r\n//     } catch (err) {\r\n//       setError('Login failed. Please check your credentials.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n// //   const handleRegister = async (e: React.FormEvent) => {\r\n// //     e.preventDefault();\r\n// //     const response = await apiClient.post('/users', {\r\n// //       user_name: authData.name,\r\n// //       email: authData.email,\r\n// //       password: authData.password,\r\n// //       phone: authData.phone,\r\n// //     });\r\n// //     setUser(response.user);\r\n// //     setIsLoggedIn(true);\r\n// //   };\r\n\r\n//   const handleRegister = async (e: React.FormEvent, form: RegisterForm) => {\r\n//   e.preventDefault();\r\n\r\n//   try {\r\n//     // 1. Register the user\r\n//     const res = await apiClient.post('/auth/register', {\r\n//       user_name: form.name,\r\n//       email: form.email,\r\n//       password: form.password,\r\n//       phone: form.phone,\r\n//     });\r\n\r\n//     if (res.status === 201) {\r\n//       // 2. Immediately login the user using the same credentials\r\n//       const loginRes = await apiClient.post('/auth/login', {\r\n//         email: form.email,\r\n//         password: form.password,\r\n//       });\r\n\r\n//       const { accessToken, user } = loginRes.data;\r\n\r\n//       setAccessToken(accessToken);\r\n//       setAuthData({ email: form.email, password: form.password });\r\n//       setUser(user);\r\n//       setIsLoggedIn(true);\r\n//     }\r\n//   } catch (error) {\r\n//     console.error('Registration/Login failed:', error);\r\n//   }\r\n// };\r\n\r\n\r\n//   const handleLogout = async () => {\r\n//     await apiClient.post('/auth/logout', {});\r\n//     setIsLoggedIn(false);\r\n//     setUser(null);\r\n//     setUsers([]);\r\n//     setTasks([]);\r\n//   };\r\n\r\n//   const fetchUsers = async () => {\r\n//     const data = await apiClient.get('/users');\r\n//     setUsers(data);\r\n//   };\r\n\r\n//   const updateUser = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     if (!editingUser) return;\r\n//     const updatedUser = await apiClient.put(`/users/${editingUser.user_id}`, editingUser);\r\n//     setUsers((prev) => prev.map((u) => (u.user_id === editingUser.user_id ? updatedUser : u)));\r\n//     setEditingUser(null);\r\n//   };\r\n\r\n//   const deleteUser = async (id: number) => {\r\n//     await apiClient.delete(`/users/${id}`);\r\n//     setUsers((prev) => prev.filter((u) => u.user_id !== id));\r\n//   };\r\n\r\n//   const fetchTasks = async () => {\r\n//     const data = await apiClient.get('/tasks');\r\n//     setTasks(data);\r\n//   };\r\n\r\n//   const createTask = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     const task = await apiClient.post('/tasks', { name: 'New Task', description: '...' });\r\n//     setTasks((prev) => [...prev, task]);\r\n//   };\r\n\r\n//   const updateTask = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     if (!editingTask) return;\r\n//     const updatedTask = await apiClient.put(`/tasks/${editingTask.id}`, editingTask);\r\n//     setTasks((prev) => prev.map((t) => (t.id === editingTask.id ? updatedTask : t)));\r\n//     setEditingTask(null);\r\n//   };\r\n\r\n//   const deleteTask = async (id: number) => {\r\n//     await apiClient.delete(`/tasks/${id}`);\r\n//     setTasks((prev) => prev.filter((t) => t.id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider\r\n//   value={{\r\n//     user,\r\n//     isLoggedIn,\r\n//     setUser,\r\n//     handleLogin,\r\n//     handleLogout,\r\n//     handleRegister,\r\n//     checkAuthStatus,\r\n//     users,\r\n//     fetchUsers,\r\n//     updateUser,\r\n//     deleteUser,\r\n//     tasks,\r\n//     fetchTasks,\r\n//     createTask,\r\n//     updateTask,\r\n//     deleteTask,\r\n//     error,\r\n//     authData,\r\n//     setAuthData,\r\n//   }}\r\n// >\r\n//   {children}\r\n// </AuthContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useAuth = () => {\r\n//   const context = useContext(AuthContext);\r\n//   if (!context) throw new Error('useAuth must be used inside <AuthProvider>');\r\n//   return context;\r\n// };\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/layout.tsx"],"sourcesContent":["// import type { Metadata } from \"next\";\n// import { Geist, Geist_Mono } from \"next/font/google\";\n// import \"./globals.css\";\n\n// const geistSans = Geist({\n//   variable: \"--font-geist-sans\",\n//   subsets: [\"latin\"],\n// });\n\n// const geistMono = Geist_Mono({\n//   variable: \"--font-geist-mono\",\n//   subsets: [\"latin\"],\n// });\n\n// export const metadata: Metadata = {\n//   title: \"Create Next App\",\n//   description: \"Generated by create next app\",\n// };\n\n// export default function RootLayout({\n//   children,\n// }: Readonly<{\n//   children: React.ReactNode;\n// }>) {\n//   return (\n//     <html lang=\"en\">\n//       <body\n//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n//       >\n//         {children}\n//       </body>\n//     </html>\n//   );\n// }\n\n\n// app/layout.tsx\nimport './globals.css';\nimport { Inter } from 'next/font/google';\nimport { AuthProvider } from '../../context/authContext';\n\nconst inter = Inter({ subsets: ['latin'] });\n\nexport const metadata = {\n  title: 'Task Manager',\n  description: 'Manage your companies and tasks',\n};\n\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <body className={inter.className}>\n        <AuthProvider>\n          {children}\n        </AuthProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":"AAAA,wCAAwC;AACxC,wDAAwD;AACxD,0BAA0B;AAE1B,4BAA4B;AAC5B,mCAAmC;AACnC,wBAAwB;AACxB,MAAM;AAEN,iCAAiC;AACjC,mCAAmC;AACnC,wBAAwB;AACxB,MAAM;AAEN,sCAAsC;AACtC,8BAA8B;AAC9B,iDAAiD;AACjD,KAAK;AAEL,uCAAuC;AACvC,cAAc;AACd,gBAAgB;AAChB,+BAA+B;AAC/B,QAAQ;AACR,aAAa;AACb,uBAAuB;AACvB,cAAc;AACd,gFAAgF;AAChF,UAAU;AACV,qBAAqB;AACrB,gBAAgB;AAChB,cAAc;AACd,OAAO;AACP,IAAI;AAGJ,iBAAiB;;;;;;;AAGjB;;;;;AAIO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EAAE,QAAQ,EAAiC;IAC5E,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAW,yIAAA,CAAA,UAAK,CAAC,SAAS;sBAC9B,cAAA,8OAAC,uHAAA,CAAA,eAAY;0BACV;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}