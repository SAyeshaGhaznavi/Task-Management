{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/context/authContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n// import apiClient, { setAccessToken } from '@/app/lib/api';\r\n\r\ninterface User {\r\n  user_id: number;\r\n  user_name: string;\r\n  password: string;\r\n  phone?: string;\r\n  email: string;\r\n  createdAt?: string;\r\n}\r\n\r\ninterface Task {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  projectId?: number;\r\n}\r\n\r\ninterface AuthData {\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n  phone?: string;\r\n}\r\n\r\ninterface Project {\r\n  project_id: number;\r\n  project_name: string;\r\n  project_description?: string;\r\n  company_id: number;\r\n}\r\n\r\ninterface Company {\r\n  company_id: number;\r\n  company_name: string;\r\n  company_location: string;\r\n  owner_id: number;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  error: string | null;\r\n  isLoggedIn: boolean;\r\n  setUser: (u: User | null) => void;\r\n  handleLogin: (e: React.FormEvent) => Promise<void>;\r\n  handleLogout: () => Promise<void>;\r\n  handleRegister: (e: React.FormEvent) => Promise<void>;\r\n  checkAuthStatus: () => Promise<void>;\r\n  users: User[];\r\n  fetchUsers: () => Promise<void>;\r\n  updateUser: (e: React.FormEvent) => Promise<void>;\r\n  deleteUser: (id: number) => Promise<void>;\r\n  tasks: Task[];\r\n  fetchTasks: () => Promise<void>;\r\n  createTask: (e: React.FormEvent) => Promise<void>;\r\n  updateTask: (e: React.FormEvent) => Promise<void>;\r\n  deleteTask: (id: number) => Promise<void>;\r\n  authData: AuthData;\r\n  setAuthData: React.Dispatch<React.SetStateAction<AuthData>>;\r\n  projects: Project[];\r\n  setProjects: React.Dispatch<React.SetStateAction<Project[]>>;\r\n  company: Company|null;\r\n  setCompany: (c: Company | null) => void;\r\n  companies: Company[];\r\n  setCompanies: React.Dispatch<React.SetStateAction<Company[]>>;\r\n  accessToken: string|null;\r\n  setAccessToken: (a: string|null)=>void;\r\n}\r\n\r\n\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [authData, setAuthData] = useState<AuthData>({ email: '', password: '', name: '', phone: '' });\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [editingUser, setEditingUser] = useState<User | null>(null);\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [company, setCompany] = useState<Company|null>(null);\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [accessToken, setAccessToken] = useState<string | null>(null);\r\n\r\n   useEffect(() => {\r\n    const tryRefresh = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:3000/api/auth/refresh', {\r\n          method: 'POST',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (!res.ok) throw new Error('Refresh failed');\r\n\r\n        const data = await res.json();\r\n        const token = data.access_token;\r\n\r\n        setAccessToken(token);\r\n        localStorage.setItem('access_token', token);\r\n\r\n        // Optionally: fetch user profile using new access token\r\n        const userRes = await fetch('http://localhost:3000/api/auth/profile', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const userData = await userRes.json();\r\n        setUser(userData);\r\n      } catch (err) {\r\n        console.error('Refresh error:', err);\r\n        // setUser(null);\r\n        // setAccessToken(null);\r\n      }\r\n    };\r\n\r\n    tryRefresh();\r\n  }, []);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      fetchUsers();\r\n      fetchTasks();\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const response = await apiClient.get('/auth/profile');\r\n      setUser(response);\r\n      setIsLoggedIn(true);\r\n    } catch {\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    try {\r\n        e.preventDefault();\r\n        const response = await apiClient.post('/auth/login', {\r\n          email: authData.email,\r\n          password: authData.password,\r\n        });\r\n        setAccessToken(response.access_token);\r\n        setUser({\r\n          user_id: response.user.user_id,\r\n          user_name: response.user.user_name,\r\n          email: response.user.email,\r\n          phone: response.user.phone,\r\n          password: response.user.password,\r\n        });\r\n        console.log(\"User: \", user);\r\n        setIsLoggedIn(true);\r\n        setAuthData({ email: '', password: '', name: '', phone: '' });\r\n        setError(null);\r\n    } catch (err) {\r\n      setError('Login failed. Please check your credentials.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n  e.preventDefault();\r\n  try {\r\n\r\n    try {\r\n      setLoading(true);\r\n    } catch (error) {\r\n      console.log(\"loading failed\");\r\n    }\r\n    const response = await apiClient.post('/auth/register', {\r\n      user_name: authData.name,\r\n      email: authData.email,\r\n      password: authData.password,\r\n      phone: authData.phone,\r\n    });\r\n\r\n    const { access_token, user } = response.data;\r\n\r\n    try {\r\n      setAccessToken(response.access_token);\r\n    } catch (error) {\r\n      console.log(\"setAccessToken failed\");\r\n    }\r\n\r\n    setUser({\r\n      user_id: user.user_id,\r\n      user_name: user.user_name,\r\n      email: user.email,\r\n      phone: user.phone,\r\n      password: user.password,\r\n    });\r\n\r\n    try {\r\n      setIsLoggedIn(true);\r\n    } catch (error) {\r\n      console.log(\"isLoggedIn failed\");\r\n    }\r\n\r\n    try {\r\n      setAuthData({ email: '', password: '', name: '', phone: '' });\r\n    } catch (error) {\r\n      console.log(\"setAuthData failed\"); \r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n    } catch (error) {\r\n      console.log(\"setError failed\");\r\n    }\r\n\r\n    window.location.href = 'http://localhost:3000/dashboard';\r\n  } catch (err) {\r\n    setError('Registration failed. Please try again.');\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n  const handleLogout = async () => {\r\n    await apiClient.post('/auth/logout', {});\r\n    setIsLoggedIn(false);\r\n    setUser(null);\r\n    setUsers([]);\r\n    setTasks([]);\r\n\r\n    window.location.href = 'http://localhost:3000';\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    const data = await apiClient.get('/users');\r\n    setUsers(data);\r\n  };\r\n\r\n  const updateUser = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!editingUser) return;\r\n    const updatedUser = await apiClient.put(`/users/${editingUser.user_id}`, editingUser);\r\n    setUsers((prev) => prev.map((u) => (u.user_id === editingUser.user_id ? updatedUser : u)));\r\n    setEditingUser(null);\r\n  };\r\n\r\n  const deleteUser = async (id: number) => {\r\n    await apiClient.delete(`/users/${id}`);\r\n    setUsers((prev) => prev.filter((u) => u.user_id !== id));\r\n  };\r\n\r\n  const fetchTasks = async () => {\r\n    const data = await apiClient.get('/tasks');\r\n    setTasks(data);\r\n  };\r\n\r\n  const createTask = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const task = await apiClient.post('/tasks', { name: 'New Task', description: '...' });\r\n    setTasks((prev) => [...prev, task]);\r\n  };\r\n\r\n  const updateTask = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!editingTask) return;\r\n    const updatedTask = await apiClient.put(`/tasks/${editingTask.id}`, editingTask);\r\n    setTasks((prev) => prev.map((t) => (t.id === editingTask.id ? updatedTask : t)));\r\n    setEditingTask(null);\r\n  };\r\n\r\n  const deleteTask = async (id: number) => {\r\n    await apiClient.delete(`/tasks/${id}`);\r\n    setTasks((prev) => prev.filter((t) => t.id !== id));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n  value={{\r\n    user,\r\n    isLoggedIn,\r\n    setUser,\r\n    handleLogin,\r\n    handleLogout,\r\n    handleRegister,\r\n    checkAuthStatus,\r\n    users,\r\n    fetchUsers,\r\n    updateUser,\r\n    deleteUser,\r\n    tasks,\r\n    fetchTasks,\r\n    createTask,\r\n    updateTask,\r\n    deleteTask,\r\n    error,\r\n    authData,\r\n    setAuthData,\r\n    projects,\r\n    setProjects,\r\n    company,\r\n    setCompany,\r\n    companies,\r\n    setCompanies,\r\n    accessToken,\r\n    setAccessToken,\r\n  }}\r\n>\r\n  {children}\r\n</AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth must be used inside <AuthProvider>');\r\n  return context;\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}