{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/ui/dashboard/nav-links.tsx"],"sourcesContent":["'use client';\r\n\r\nimport {\r\n  UserGroupIcon,\r\n  HomeIcon,\r\n  DocumentDuplicateIcon,\r\n  AdjustmentsHorizontalIcon,\r\n  BellIcon,\r\n  ClipboardDocumentListIcon,\r\n  BuildingOffice2Icon,\r\n  WrenchScrewdriverIcon\r\n} from '@heroicons/react/24/outline';\r\nimport Link from 'next/link';\r\nimport { usePathname } from 'next/navigation';\r\nimport clsx from 'clsx';\r\n\r\nconst links = [\r\n  { name: 'Home', href: '/dashboard', icon: HomeIcon  },\r\n  // { name: 'Users', href: '/dashboard/users', icon: UserGroupIcon },\r\n  { name: 'Companies', href: '/dashboard/company', icon: BuildingOffice2Icon },\r\n  { name: 'Projects', href: '/dashboard/project', icon: WrenchScrewdriverIcon },\r\n  { name: 'Task', href: '/dashboard/task', icon: DocumentDuplicateIcon },\r\n  { name: 'Todos', href: '/dashboard/todo', icon: ClipboardDocumentListIcon },\r\n  //{ name: 'Notification', href: '/dashboard/notification', icon: BellIcon },\r\n  { name: 'Invites', href: '/dashboard/invites', icon: BellIcon },\r\n  { name: 'Admin', href: '/dashboard/admin', icon: UserGroupIcon},\r\n  { name: 'Edit', href: '/dashboard/edit', icon: AdjustmentsHorizontalIcon },\r\n];\r\n\r\nexport default function NavLinks() {\r\n  const pathname = usePathname();\r\n  return (\r\n    <>\r\n      {links.map((link) => {\r\n        const LinkIcon = link.icon;\r\n        return (\r\n          <Link\r\n            key={link.name}\r\n            href={link.href}\r\n            className={clsx(\r\n              'flex h-[48px] grow items-center justify-center gap-2 rounded-md bg-gray-50 p-3 text-sm font-medium hover:bg-sky-100 hover:text-blue-600 md:flex-none md:justify-start md:p-2 md:px-3',\r\n              {\r\n                'bg-sky-100 text-blue-600': pathname === link.href,\r\n              },\r\n            )}\r\n          >\r\n            <LinkIcon className=\"w-6\" />\r\n            <p className=\"hidden md:block\">{link.name}</p>\r\n          </Link>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAdA;;;;;;AAgBA,MAAM,QAAQ;IACZ;QAAE,MAAM;QAAQ,MAAM;QAAc,MAAM,+MAAA,CAAA,WAAQ;IAAE;IACpD,oEAAoE;IACpE;QAAE,MAAM;QAAa,MAAM;QAAsB,MAAM,qOAAA,CAAA,sBAAmB;IAAC;IAC3E;QAAE,MAAM;QAAY,MAAM;QAAsB,MAAM,yOAAA,CAAA,wBAAqB;IAAC;IAC5E;QAAE,MAAM;QAAQ,MAAM;QAAmB,MAAM,yOAAA,CAAA,wBAAqB;IAAC;IACrE;QAAE,MAAM;QAAS,MAAM;QAAmB,MAAM,iPAAA,CAAA,4BAAyB;IAAC;IAC1E,4EAA4E;IAC5E;QAAE,MAAM;QAAW,MAAM;QAAsB,MAAM,+MAAA,CAAA,WAAQ;IAAC;IAC9D;QAAE,MAAM;QAAS,MAAM;QAAoB,MAAM,yNAAA,CAAA,gBAAa;IAAA;IAC9D;QAAE,MAAM;QAAQ,MAAM;QAAmB,MAAM,iPAAA,CAAA,4BAAyB;IAAC;CAC1E;AAEc,SAAS;IACtB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,qBACE;kBACG,MAAM,GAAG,CAAC,CAAC;YACV,MAAM,WAAW,KAAK,IAAI;YAC1B,qBACE,8OAAC,4JAAA,CAAA,UAAI;gBAEH,MAAM,KAAK,IAAI;gBACf,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EACZ,wLACA;oBACE,4BAA4B,aAAa,KAAK,IAAI;gBACpD;;kCAGF,8OAAC;wBAAS,WAAU;;;;;;kCACpB,8OAAC;wBAAE,WAAU;kCAAmB,KAAK,IAAI;;;;;;;eAVpC,KAAK,IAAI;;;;;QAapB;;AAGN","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/context/websocketContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useAuth } from '../../context/authContext';\r\n\r\ninterface Notification {\r\n  type: 'TODO_ASSIGNED';\r\n  todoId: number;\r\n  projectId: number;\r\n  message: string;\r\n  todoTitle?: string;\r\n  projectName?: string;\r\n  timestamp: string;\r\n  createdAt?: Date;\r\n}\r\n\r\ninterface WebSocketContextType {\r\n  isConnected: boolean;\r\n  notifications: Notification[];\r\n  clearNotifications: () => void;\r\n  markAsRead: (index: number) => void;\r\n}\r\n\r\nconst WebSocketContext = createContext<WebSocketContextType | null>(null);\r\n\r\nexport const WebSocketProvider = ({ children }: { children: ReactNode }) => {\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const { user, isLoggedIn } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn || !user) {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        setSocket(null);\r\n        setIsConnected(false);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Connect to WebSocket server\r\n    const newSocket = io('http://localhost:3001/notifications', {\r\n      query: {\r\n        userId: user.user_id.toString(),\r\n      },\r\n      auth: {\r\n        token: localStorage.getItem('access_token'), // If you store JWT in localStorage\r\n      },\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('🔌 WebSocket connected');\r\n      setIsConnected(true);\r\n      \r\n      // Authenticate with the server\r\n      newSocket.emit('authenticate', {\r\n        userId: user.user_id,\r\n        token: localStorage.getItem('access_token'),\r\n      });\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('🔌 WebSocket disconnected');\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('todoAssigned', (notification: Notification) => {\r\n      console.log('📢 Received todo assignment notification:', notification);\r\n      setNotifications(prev => [notification, ...prev]);\r\n      \r\n      // Show browser notification if permission is granted\r\n      if (Notification.permission === 'granted') {\r\n        new Notification('New Todo Assigned', {\r\n          body: notification.message,\r\n          icon: '/favicon.ico',\r\n        });\r\n      }\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('❌ WebSocket connection error:', error);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [isLoggedIn, user]);\r\n\r\n  const clearNotifications = () => {\r\n    setNotifications([]);\r\n  };\r\n\r\n  const markAsRead = (index: number) => {\r\n    setNotifications(prev => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <WebSocketContext.Provider\r\n      value={{\r\n        isConnected,\r\n        notifications,\r\n        clearNotifications,\r\n        markAsRead,\r\n      }}\r\n    >\r\n      {children}\r\n    </WebSocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useWebSocket = () => {\r\n  const context = useContext(WebSocketContext);\r\n  if (!context) {\r\n    throw new Error('useWebSocket must be used within a WebSocketProvider');\r\n  }\r\n  return context;\r\n}; "],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AAJA;;;;;AAwBA,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAE7D,MAAM,oBAAoB,CAAC,EAAE,QAAQ,EAA2B;IACrE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACpD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACrE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,cAAc,CAAC,MAAM;YACxB,IAAI,QAAQ;gBACV,OAAO,UAAU;gBACjB,UAAU;gBACV,eAAe;YACjB;YACA;QACF;QAEA,8BAA8B;QAC9B,MAAM,YAAY,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE,uCAAuC;YAC1D,OAAO;gBACL,QAAQ,KAAK,OAAO,CAAC,QAAQ;YAC/B;YACA,MAAM;gBACJ,OAAO,aAAa,OAAO,CAAC;YAC9B;QACF;QAEA,UAAU,EAAE,CAAC,WAAW;YACtB,QAAQ,GAAG,CAAC;YACZ,eAAe;YAEf,+BAA+B;YAC/B,UAAU,IAAI,CAAC,gBAAgB;gBAC7B,QAAQ,KAAK,OAAO;gBACpB,OAAO,aAAa,OAAO,CAAC;YAC9B;QACF;QAEA,UAAU,EAAE,CAAC,cAAc;YACzB,QAAQ,GAAG,CAAC;YACZ,eAAe;QACjB;QAEA,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC5B,QAAQ,GAAG,CAAC,6CAA6C;YACzD,iBAAiB,CAAA,OAAQ;oBAAC;uBAAiB;iBAAK;YAEhD,qDAAqD;YACrD,IAAI,aAAa,UAAU,KAAK,WAAW;gBACzC,IAAI,aAAa,qBAAqB;oBACpC,MAAM,aAAa,OAAO;oBAC1B,MAAM;gBACR;YACF;QACF;QAEA,UAAU,EAAE,CAAC,iBAAiB,CAAC;YAC7B,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,eAAe;QACjB;QAEA,UAAU;QAEV,qBAAqB;QACrB,OAAO;YACL,UAAU,UAAU;QACtB;IACF,GAAG;QAAC;QAAY;KAAK;IAErB,MAAM,qBAAqB;QACzB,iBAAiB,EAAE;IACrB;IAEA,MAAM,aAAa,CAAC;QAClB,iBAAiB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IACvD;IAEA,qBACE,8OAAC,iBAAiB,QAAQ;QACxB,OAAO;YACL;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,MAAM,eAAe;IAC1B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/components/NotificationBell.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useWebSocket } from '../context/websocketContext';\r\n\r\nexport default function NotificationBell() {\r\n  const { notifications, isConnected, markAsRead } = useWebSocket();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const unreadCount = notifications.length;\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {/* Notification Bell Button */}\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"relative p-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n        title=\"Notifications\"\r\n      >\r\n        <svg\r\n          className=\"w-6 h-6\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M15 17h5l-5 5v-5z\"\r\n          />\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M10 21h4a2 2 0 002-2V7a2 2 0 00-2-2H10a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n          />\r\n        </svg>\r\n        \r\n        {/* Notification Badge */}\r\n        {unreadCount > 0 && (\r\n          <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\r\n            {unreadCount > 9 ? '9+' : unreadCount}\r\n          </span>\r\n        )}\r\n        \r\n        {/* Connection Status Indicator */}\r\n        <div className={`absolute -bottom-1 -right-1 w-3 h-3 rounded-full ${\r\n          isConnected ? 'bg-green-500' : 'bg-red-500'\r\n        }`} title={isConnected ? 'Connected' : 'Disconnected'} />\r\n      </button>\r\n\r\n      {/* Notification Dropdown */}\r\n      {isOpen && (\r\n        <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\r\n          <div className=\"p-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Notifications</h3>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <span className={`w-2 h-2 rounded-full ${\r\n                  isConnected ? 'bg-green-500' : 'bg-red-500'\r\n                }`} />\r\n                <span className=\"text-sm text-gray-500\">\r\n                  {isConnected ? 'Connected' : 'Disconnected'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"max-h-96 overflow-y-auto\">\r\n            {notifications.length === 0 ? (\r\n              <div className=\"p-4 text-center text-gray-500\">\r\n                No notifications yet\r\n              </div>\r\n            ) : (\r\n              notifications.map((notification, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"p-4 border-b border-gray-100 hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"flex-1\">\r\n                      <p className=\"text-sm font-medium text-gray-900\">\r\n                        {notification.todoTitle || `Todo ${notification.todoId}`}\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-600 mt-1\">\r\n                        {notification.message}\r\n                      </p>\r\n                      <div className=\"flex items-center mt-2 text-xs text-gray-500\">\r\n                        <span>{notification.projectName}</span>\r\n                        <span className=\"mx-2\">•</span>\r\n                        <span>\r\n                          {new Date(notification.timestamp).toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => markAsRead(index)}\r\n                      className=\"ml-2 text-gray-400 hover:text-gray-600\"\r\n                      title=\"Mark as read\"\r\n                    >\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          \r\n          {notifications.length > 0 && (\r\n            <div className=\"p-4 border-t border-gray-200\">\r\n              <button\r\n                onClick={() => {\r\n                  notifications.forEach((_, index) => markAsRead(index));\r\n                }}\r\n                className=\"text-sm text-blue-600 hover:text-blue-800\"\r\n              >\r\n                Mark all as read\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,eAAY,AAAD;IAC9D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,cAAc,cAAc,MAAM;IAExC,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBACC,SAAS,IAAM,UAAU,CAAC;gBAC1B,WAAU;gBACV,OAAM;;kCAEN,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,QAAO;wBACP,SAAQ;;0CAER,8OAAC;gCACC,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;0CAEJ,8OAAC;gCACC,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;;;;;;;oBAKL,cAAc,mBACb,8OAAC;wBAAK,WAAU;kCACb,cAAc,IAAI,OAAO;;;;;;kCAK9B,8OAAC;wBAAI,WAAW,CAAC,iDAAiD,EAChE,cAAc,iBAAiB,cAC/B;wBAAE,OAAO,cAAc,cAAc;;;;;;;;;;;;YAIxC,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAsC;;;;;;8CACpD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAW,CAAC,qBAAqB,EACrC,cAAc,iBAAiB,cAC/B;;;;;;sDACF,8OAAC;4CAAK,WAAU;sDACb,cAAc,cAAc;;;;;;;;;;;;;;;;;;;;;;;kCAMrC,8OAAC;wBAAI,WAAU;kCACZ,cAAc,MAAM,KAAK,kBACxB,8OAAC;4BAAI,WAAU;sCAAgC;;;;;mCAI/C,cAAc,GAAG,CAAC,CAAC,cAAc,sBAC/B,8OAAC;gCAEC,WAAU;0CAEV,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAE,WAAU;8DACV,aAAa,SAAS,IAAI,CAAC,KAAK,EAAE,aAAa,MAAM,EAAE;;;;;;8DAE1D,8OAAC;oDAAE,WAAU;8DACV,aAAa,OAAO;;;;;;8DAEvB,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;sEAAM,aAAa,WAAW;;;;;;sEAC/B,8OAAC;4DAAK,WAAU;sEAAO;;;;;;sEACvB,8OAAC;sEACE,IAAI,KAAK,aAAa,SAAS,EAAE,cAAc;;;;;;;;;;;;;;;;;;sDAItD,8OAAC;4CACC,SAAS,IAAM,WAAW;4CAC1B,WAAU;4CACV,OAAM;sDAEN,cAAA,8OAAC;gDAAI,WAAU;gDAAU,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACjE,cAAA,8OAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;+BAzBtE;;;;;;;;;;oBAkCZ,cAAc,MAAM,GAAG,mBACtB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,SAAS;gCACP,cAAc,OAAO,CAAC,CAAC,GAAG,QAAU,WAAW;4BACjD;4BACA,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AASf","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/ui/dashboard/sidenav.tsx"],"sourcesContent":["'use client'\r\n\r\nimport Link from 'next/link';\r\nimport NavLinks from '@/app/ui/dashboard/nav-links';\r\nimport { PowerIcon } from '@heroicons/react/24/outline';\r\nimport { handleLogout } from '../../../../auth';\r\nimport { useAuth } from '../../../../context/authContext';\r\nimport NotificationBell from '../../../components/NotificationBell';\r\n \r\nexport default function SideNav() {\r\n  const {handleLogout}=useAuth();\r\n  return (\r\n    <div className=\"flex h-full flex-col px-3 py-4 md:px-2\">\r\n      <div className=\"flex grow flex-row justify-between space-x-2 md:flex-col md:space-x-0 md:space-y-2\">\r\n        <NavLinks />\r\n        <div className=\"hidden h-auto w-full grow rounded-md bg-gray-50 md:block\"></div>\r\n        \r\n        {/* Notification Bell */}\r\n        <div className=\"flex items-center justify-center md:justify-start md:p-2 md:px-3\">\r\n          <NotificationBell />\r\n        </div>\r\n        \r\n        <form\r\n          action={async () => {\r\n            //'use server';\r\n            await ({ redirectTo: '/' });\r\n          }}\r\n        >\r\n          <button onClick={handleLogout}  className=\"flex h-[48px] grow items-center justify-center gap-2 rounded-md bg-gray-50 p-3 text-sm font-medium hover:bg-sky-100 hover:text-blue-600 md:flex-none md:justify-start md:p-2 md:px-3\">\r\n            {<PowerIcon className=\"w-6\" /> }\r\n            <div className=\"hidden md:block\">Sign Out</div>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AACA;AAPA;;;;;;AASe,SAAS;IACtB,MAAM,EAAC,YAAY,EAAC,GAAC,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IAC3B,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,8IAAA,CAAA,UAAQ;;;;;8BACT,8OAAC;oBAAI,WAAU;;;;;;8BAGf,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,sIAAA,CAAA,UAAgB;;;;;;;;;;8BAGnB,8OAAC;oBACC,QAAQ;wBACN,eAAe;wBACf,MAAO;4BAAE,YAAY;wBAAI;oBAC3B;8BAEA,cAAA,8OAAC;wBAAO,SAAS;wBAAe,WAAU;;0CACvC,8OAAC,iNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACtB,8OAAC;gCAAI,WAAU;0CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM7C","debugId":null}}]
}