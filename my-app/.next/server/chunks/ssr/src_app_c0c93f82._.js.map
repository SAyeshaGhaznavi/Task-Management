{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/lib/api.ts"],"sourcesContent":["// const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001/api';\r\n\r\n// let accessToken: string | null = null;\r\n\r\n// export function setAccessToken(token: string) {\r\n//   accessToken = token;\r\n// }\r\n\r\n// export const apiClient = {\r\n//   async get(endpoint: string) {\r\n//     const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n//       method: 'GET',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       credentials: 'include',\r\n//     });\r\n    \r\n//     if (!response.ok) {\r\n//       throw new Error(`HTTP error! status: ${response.status}`);\r\n//     }\r\n    \r\n//     return response.json();\r\n//   },\r\n\r\n//   async post(endpoint: string, data: any) {\r\n//     const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       credentials: 'include',\r\n//       body: JSON.stringify(data),\r\n//     });\r\n    \r\n//     if (!response.ok) {\r\n//       throw new Error(`HTTP error! status: ${response.status}`);\r\n//     }\r\n    \r\n//     return response.json();\r\n//   },\r\n\r\n//   async put(endpoint: string, data: any) {\r\n//     const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       credentials: 'include',\r\n//       body: JSON.stringify(data),\r\n//     });\r\n    \r\n//     if (!response.ok) {\r\n//       throw new Error(`HTTP error! status: ${response.status}`);\r\n//     }\r\n    \r\n//     return response.json();\r\n//   },\r\n\r\n//   async delete(endpoint: string) {\r\n//     const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n//       method: 'DELETE',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       credentials: 'include',\r\n//     });\r\n    \r\n//     if (!response.ok) {\r\n//       throw new Error(`HTTP error! status: ${response.status}`);\r\n//     }\r\n    \r\n//     return response.json();\r\n//   },\r\n// };\r\n\r\n// export default apiClient;\r\n\r\n\r\n\r\n\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001/api';\r\n\r\n// let accessToken: string | null = null;\r\n\r\n// export function setAccessToken(token: string) {\r\n//   accessToken = token;\r\n// }\r\n\r\nimport { useAuth } from \"../../../context/authContext\";\r\n\r\nconst {accessToken, setAccessToken}=useAuth();\r\n\r\nasync function fetchWithRetry(\r\n  endpoint: string,\r\n  options: RequestInit,\r\n  retry = true\r\n): Promise<any> {\r\n  const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n    ...options,\r\n    credentials: 'include',\r\n    headers: {\r\n      ...(options.headers || {}),\r\n      ...(accessToken ? { Authorization: `Bearer ${accessToken}` } : {}),\r\n    },\r\n  });\r\n\r\n  if (response.status === 401 && retry) {\r\n    const refreshRes = await fetch(`${API_BASE_URL}/auth/refresh`, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n    });\r\n\r\n    if (refreshRes.ok) {\r\n      const { access_token } = await refreshRes.json();\r\n      setAccessToken(access_token);\r\n\r\n      return fetchWithRetry(endpoint, options, false);\r\n    } else {\r\n      throw new Error('Unauthorized and refresh token failed');\r\n    }\r\n  }\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\nexport const apiClient = {\r\n  get(endpoint: string) {\r\n    return fetchWithRetry(endpoint, { method: 'GET' });\r\n  },\r\n\r\n  post(endpoint: string, data: any) {\r\n    return fetchWithRetry(endpoint, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  },\r\n\r\n  put(endpoint: string, data: any) {\r\n    return fetchWithRetry(endpoint, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  },\r\n\r\n  patch(endpoint: string, data: any) {\r\n    return fetchWithRetry(endpoint, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  },\r\n\r\n  delete(endpoint: string) {\r\n    return fetchWithRetry(endpoint, { method: 'DELETE' });\r\n  },\r\n};\r\n\r\nexport default apiClient;\r\n"],"names":[],"mappings":"AAAA,uFAAuF;AAEvF,yCAAyC;AAEzC,kDAAkD;AAClD,yBAAyB;AACzB,IAAI;AAEJ,6BAA6B;AAC7B,kCAAkC;AAClC,mEAAmE;AACnE,uBAAuB;AACvB,mBAAmB;AACnB,8CAA8C;AAC9C,WAAW;AACX,gCAAgC;AAChC,UAAU;AAEV,0BAA0B;AAC1B,mEAAmE;AACnE,QAAQ;AAER,8BAA8B;AAC9B,OAAO;AAEP,8CAA8C;AAC9C,mEAAmE;AACnE,wBAAwB;AACxB,mBAAmB;AACnB,8CAA8C;AAC9C,WAAW;AACX,gCAAgC;AAChC,oCAAoC;AACpC,UAAU;AAEV,0BAA0B;AAC1B,mEAAmE;AACnE,QAAQ;AAER,8BAA8B;AAC9B,OAAO;AAEP,6CAA6C;AAC7C,mEAAmE;AACnE,uBAAuB;AACvB,mBAAmB;AACnB,8CAA8C;AAC9C,WAAW;AACX,gCAAgC;AAChC,oCAAoC;AACpC,UAAU;AAEV,0BAA0B;AAC1B,mEAAmE;AACnE,QAAQ;AAER,8BAA8B;AAC9B,OAAO;AAEP,qCAAqC;AACrC,mEAAmE;AACnE,0BAA0B;AAC1B,mBAAmB;AACnB,8CAA8C;AAC9C,WAAW;AACX,gCAAgC;AAChC,UAAU;AAEV,0BAA0B;AAC1B,mEAAmE;AACnE,QAAQ;AAER,8BAA8B;AAC9B,OAAO;AACP,KAAK;AAEL,4BAA4B;;;;;AAQ5B,yCAAyC;AAEzC,kDAAkD;AAClD,yBAAyB;AACzB,IAAI;AAEJ;AARA,MAAM,eAAe,iEAAmC;;AAUxD,MAAM,EAAC,WAAW,EAAE,cAAc,EAAC,GAAC,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;AAE1C,eAAe,eACb,QAAgB,EAChB,OAAoB,EACpB,QAAQ,IAAI;IAEZ,MAAM,WAAW,MAAM,MAAM,GAAG,eAAe,UAAU,EAAE;QACzD,GAAG,OAAO;QACV,aAAa;QACb,SAAS;YACP,GAAI,QAAQ,OAAO,IAAI,CAAC,CAAC;YACzB,GAAI,cAAc;gBAAE,eAAe,CAAC,OAAO,EAAE,aAAa;YAAC,IAAI,CAAC,CAAC;QACnE;IACF;IAEA,IAAI,SAAS,MAAM,KAAK,OAAO,OAAO;QACpC,MAAM,aAAa,MAAM,MAAM,GAAG,aAAa,aAAa,CAAC,EAAE;YAC7D,QAAQ;YACR,aAAa;QACf;QAEA,IAAI,WAAW,EAAE,EAAE;YACjB,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,WAAW,IAAI;YAC9C,eAAe;YAEf,OAAO,eAAe,UAAU,SAAS;QAC3C,OAAO;YACL,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;IAC1D;IAEA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,YAAY;IACvB,KAAI,QAAgB;QAClB,OAAO,eAAe,UAAU;YAAE,QAAQ;QAAM;IAClD;IAEA,MAAK,QAAgB,EAAE,IAAS;QAC9B,OAAO,eAAe,UAAU;YAC9B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF;IAEA,KAAI,QAAgB,EAAE,IAAS;QAC7B,OAAO,eAAe,UAAU;YAC9B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF;IAEA,OAAM,QAAgB,EAAE,IAAS;QAC/B,OAAO,eAAe,UAAU;YAC9B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF;IAEA,QAAO,QAAgB;QACrB,OAAO,eAAe,UAAU;YAAE,QAAQ;QAAS;IACrD;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/dashboard/company/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'next/navigation';\r\nimport apiClient from '../../../lib/api';\r\nimport { useAuth } from '../../../../../context/authContext';\r\n\r\nexport default function CompanyDetailPage() {\r\n  const {company, setCompany, projects, setProjects, user}=useAuth();\r\n  const { id } = useParams();\r\n  //const [company, setCompany] = useState(null);\r\n  //const [projects, setProjects] = useState([]);\r\n  const [error, setError] = useState('');\r\n  //const { user } = useAuth();\r\n\r\n  const curCompany= apiClient.get(`/company/${id}`);\r\n\r\n  useEffect(() => {\r\n    const fetchCompany = async () => {\r\n      try {\r\n        const companyRes = await apiClient.get(`/company/${id}`);\r\n        setCompany(companyRes);\r\n\r\n        const projectsRes = await apiClient.get(`/project/1/${id}`);\r\n        setProjects(projectsRes);\r\n      } catch (err) {\r\n        setError('Failed to load company or projects');\r\n      }\r\n    };\r\n\r\n    if (id) fetchCompany();\r\n  }, [id]);\r\n\r\n    if (!company) {\r\n    return <p className=\"p-6\">Loading company...</p>;\r\n  }\r\n\r\n  const isAdmin = company?.owner_id === user?.user_id;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      {company && (\r\n        <>\r\n          <h2 className=\"text-2xl font-bold mb-2\">{company.company_name}</h2>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            {company.company_location || 'No location'}\r\n          </p>\r\n\r\n          <h3 className=\"text-xl font-semibold mt-6 mb-3\">Projects</h3>\r\n          <ul className=\"space-y-3\">\r\n            {projects.map((proj) => (\r\n              <li\r\n                key={proj.project_id}\r\n                className=\"border p-4 rounded shadow-sm bg-white\"\r\n              >\r\n                <p className=\"font-medium\">{proj.project_name}</p>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  {proj.project_description || 'No description'}\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          {isAdmin && (\r\n            <>\r\n              {/* Create New Project Form */}\r\n              <CreateProjectForm/>\r\n\r\n              {/* Invite Member Form */}\r\n              <InviteMemberForm />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CreateProjectForm({  }) {\r\n  const [name, setName] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const {company}=useAuth();\r\n  const companyId=company?.company_id;\r\n\r\n  const handleSubmit = async () => {\r\n    //e.preventDefault();\r\n    try {\r\n      await apiClient.post('/project', {\r\n        project_name: name,\r\n        project_description: desc,\r\n        company_id: companyId,\r\n      });\r\n      setMsg('Project created successfully!');\r\n      setName('');\r\n      setDesc('');\r\n    } catch {\r\n      setMsg('Failed to create project');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mt-6 space-y-4\">\r\n      <h4 className=\"text-lg font-semibold\">Create New Project</h4>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        className=\"border p-2 w-full\"\r\n      />\r\n      <textarea\r\n        placeholder=\"Project description\"\r\n        value={desc}\r\n        onChange={(e) => setDesc(e.target.value)}\r\n        className=\"border p-2 w-full\"\r\n      />\r\n      <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n        Create\r\n      </button>\r\n      {msg && <p className=\"text-sm text-gray-500\">{msg}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction InviteMemberForm({ }) {\r\n  const [userId, setUserId] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const {company}=useAuth();\r\n  const companyId=company?.company_id;\r\n\r\n  const handleInvite = async () => {\r\n    //e.preventDefault();\r\n    try {\r\n      await apiClient.post('/invited-member', {\r\n        invited_by_id: parseInt(userId),\r\n        company_id: companyId,\r\n      });\r\n      setMsg('Invitation sent!');\r\n      setUserId('');\r\n    } catch {\r\n      setMsg('Failed to send invitation');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleInvite} className=\"mt-6 space-y-4\">\r\n      <h4 className=\"text-lg font-semibold\">Invite New Member</h4>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"User ID to invite\"\r\n        value={userId}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n        className=\"border p-2 w-full\"\r\n      />\r\n      <button type=\"submit\" className=\"bg-green-600 text-white px-4 py-2 rounded\">\r\n        Invite\r\n      </button>\r\n      {msg && <p className=\"text-sm text-gray-500\">{msg}</p>}\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}