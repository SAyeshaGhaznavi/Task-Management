{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/new-task-management/my-app/src/app/dashboard/company/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'next/navigation';\r\nimport apiClient from '../../../lib/api';\r\nimport { useAuth } from '../../../../../context/authContext';\r\n\r\ninterface User {\r\n  user_id: number;\r\n  user_name: string;\r\n  password: string;\r\n  phone?: string;\r\n  email: string;\r\n  createdAt?: string;\r\n}\r\n\r\nexport default function CompanyDetailPage() {\r\n  const {company, setCompany, projects, setProjects, user}=useAuth();\r\n  const { id } = useParams();\r\n  //const [company, setCompany] = useState(null);\r\n  //const [projects, setProjects] = useState([]);\r\n  const [error, setError] = useState('');\r\n  //const { user } = useAuth();\r\n\r\n  const curCompany= apiClient.get(`/company/${id}`);\r\n\r\n  useEffect(() => {\r\n    const fetchCompany = async () => {\r\n      try {\r\n        const companyRes = await apiClient.get(`/company/${id}`);\r\n        setCompany(companyRes);\r\n\r\n        const projectsRes = await apiClient.get(`/project/1/${id}`);\r\n        setProjects(projectsRes);\r\n      } catch (err) {\r\n        setError('Failed to load company or projects');\r\n      }\r\n    };\r\n\r\n    if (id) fetchCompany();\r\n  }, [id]);\r\n\r\n    if (!company) {\r\n    return <p className=\"p-6\">Loading company...</p>;\r\n  }\r\n\r\n  const isAdmin = company?.owner_id === user?.user_id;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      {company && (\r\n        <>\r\n          <h2 className=\"text-2xl font-bold mb-2\">{company.company_name}</h2>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            {company.company_location || 'No location'}\r\n          </p>\r\n\r\n          <h3 className=\"text-xl font-semibold mt-6 mb-3\">Projects</h3>\r\n          <ul className=\"space-y-3\">\r\n            {projects.map((proj) => (\r\n              <li\r\n                key={proj.project_id}\r\n                className=\"border p-4 rounded shadow-sm bg-white\"\r\n              >\r\n                <p className=\"font-medium\">{proj.project_name}</p>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  {proj.project_description || 'No description'}\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          {isAdmin && (\r\n            <>\r\n              {/* Create New Project Form */}\r\n              <CreateProjectForm/>\r\n\r\n              {/* Invite Member Form */}\r\n              <InviteMemberForm />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CreateProjectForm({  }) {\r\n  const [name, setName] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const {company, setProjects}=useAuth();\r\n  const companyId=company?.company_id;\r\n\r\n  const handleSubmit = async () => {\r\n    //e.preventDefault();\r\n    try {\r\n      const newProject = await apiClient.post('/project', {\r\n        project_name: name,\r\n        project_description: desc,\r\n        company_id: companyId,\r\n      });\r\n      //setProjects((prev) => [...prev, newProject]);\r\n      setMsg('Project created successfully!');\r\n      setName('');\r\n      setDesc('');\r\n    } catch {\r\n      setMsg('Failed to create project');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mt-6 space-y-4\">\r\n      <h4 className=\"text-lg font-semibold\">Create New Project</h4>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        className=\"border p-2 w-full\"\r\n      />\r\n      <textarea\r\n        placeholder=\"Project description\"\r\n        value={desc}\r\n        onChange={(e) => setDesc(e.target.value)}\r\n        className=\"border p-2 w-full\"\r\n      />\r\n      <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n        Create\r\n      </button>\r\n      {msg && <p className=\"text-sm text-gray-500\">{msg}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\nfunction InviteMemberForm() {\r\n  const [userId, setUserId] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const { company } = useAuth();\r\n  const {user} = useAuth();\r\n  const companyId = company?.company_id;\r\n\r\n\r\n  const handleInvite = async (e: React.FormEvent) => {\r\n  e.preventDefault();\r\n\r\n  const fetchUser = async () => {\r\n    if (!email) return null;\r\n\r\n    try {\r\n      console.log(\"Email: \", email);\r\n      const res: User = await apiClient.get(`/users/by-email/${email}`);\r\n      console.log('Fetched user:', res.user_name);\r\n      return res.user_id;\r\n    } catch (err) {\r\n      console.error('Error fetching user:', err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const invitedId = await fetchUser();\r\n\r\n  if (!invitedId) {\r\n    setMsg('No user found with this email.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await apiClient.post(`/invited-member`, {\r\n      invited_id: invitedId,\r\n      invited_by_id: user?.user_id,\r\n      status: \"Pending\",\r\n      user_email: email,\r\n    });\r\n\r\n    console.log(\"Response: \", response);\r\n\r\n    setMsg('Invitation sent!');\r\n    setUserId('');\r\n    setEmail('');\r\n  } catch (err) {\r\n    console.error(err);\r\n    setMsg('Failed to send invitation');\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleInvite} className=\"mt-6 space-y-4\">\r\n      <h4 className=\"text-lg font-semibold\">Invite New Member</h4>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"User email to invite\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        className=\"border p-2 w-full\"\r\n      />\r\n      <button type=\"submit\" className=\"bg-green-600 text-white px-4 py-2 rounded\">\r\n        Invite\r\n      </button>\r\n      {msg && <p className=\"text-sm text-gray-500\">{msg}</p>}\r\n    </form>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}