{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/new-task-management/my-app/src/app/dashboard/admin/assigntodo/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport apiClient from '../../../lib/api';\r\nimport { useAuth } from '../../../../../context/authContext';\r\n\r\ninterface Todo {\r\n  todo_id: number;\r\n  todo_name: string;\r\n  todo_description?: string;\r\n  due_date?: string;\r\n  todo_priority?: string;\r\n  todo_status?: string;\r\n  task_id: number;\r\n}\r\n\r\ninterface Task {\r\n  task_id: number;\r\n  task_name: string;\r\n  project_id: number;\r\n}\r\n\r\nexport default function ProjectsPage() {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showUsersFor, setShowUsersFor] = useState<number | null>(null);\r\n  const {companyProjects, companyUsers} = useAuth();\r\n  const [curtodo, setCurTodo] =useState<number|null>(null);\r\n\r\n  const { user, isAdmin } = useAuth();\r\n  const userId = user?.user_id;\r\n\r\n  useEffect(() => {\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const allTasksPerProject = await Promise.all(\r\n        companyProjects.map((project) =>\r\n          apiClient.get(`/task/by-project/${project.project_id}`)\r\n        )\r\n      );\r\n\r\n      console.log(\"allTasksPerProject: \", allTasksPerProject);\r\n\r\n      const allTasks = allTasksPerProject.flat();\r\n\r\n      console.log(\"allTasks: \", allTasks);\r\n\r\n      const allTodosPerTask = await Promise.all(\r\n        allTasks.map((task) =>\r\n          apiClient.get(`/todo/by-task/${task.task_id}`)\r\n        )\r\n      );\r\n\r\n      console.log(\"allTodosPerTask: \", allTodosPerTask);\r\n\r\n      const allTodos = allTodosPerTask.flat();\r\n      console.log(\"allTodos: \", allTodos);\r\n      setTodos(allTodos);\r\n      console.log(\"Todos: \", todos);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Failed to fetch company TODOs');\r\n    }\r\n  };\r\n\r\n  if (companyProjects.length > 0) {\r\n    fetchTodos();\r\n  }\r\n}, []);\r\n\r\n\r\n  const handleAssign = async (todoId: number, userId: number) => {\r\n    try {\r\n      const todotemp:Todo = await apiClient.get(`/todo/${todoId}`);\r\n      console.log(\"Todo temp todo: \", todotemp);\r\n      console.log(\"Todo temp task: \", todotemp.task_id);\r\n      const tasktemp:Task = await apiClient.get(`/task/${todotemp.task_id}`);\r\n      console.log(\"Task temp task: \", tasktemp);\r\n      console.log(\"Task temp project: \", tasktemp.project_id);\r\n      await apiClient.post('/user-todo', {\r\n        user_id: userId,\r\n        todo_id: todoId,\r\n        project_id: tasktemp.project_id,\r\n      });\r\n      alert(`User assigned to Todo!`);\r\n    } catch (err) {\r\n      alert('Failed to assign user.');\r\n    }\r\n  };\r\n\r\n  const toggleUserList = (projectId: number) => {\r\n    setShowUsersFor((prev) => (prev === projectId ? null : projectId));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Company Todos</h2>\r\n\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      <ul className=\"space-y-6\">\r\n        {todos.map((todo:Todo) => (\r\n          <li\r\n            key={todo.todo_id}\r\n            className=\"p-4 border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition\"\r\n          >\r\n            <h3 className=\"text-lg font-medium text-blue-700\">{todo.todo_name}</h3>\r\n            <p className=\"text-sm text-gray-600\">{todo.todo_description || 'No description'}</p>\r\n            <p className=\"text-xs text-gray-400 mt-2\">Task ID: {todo.task_id}</p>\r\n\r\n            <button\r\n              onClick={() => toggleUserList(todo.todo_id)}\r\n              className=\"mt-3 text-sm text-blue-600 underline\"\r\n            >\r\n              {showUsersFor === todo.todo_id ? 'Hide users' : 'Assign user to todo'}\r\n            </button>\r\n\r\n            {showUsersFor === todo.todo_id && (\r\n              <div className=\"mt-3 p-3 bg-gray-50 border rounded\">\r\n                <p className=\"font-semibold mb-2\">Select a user:</p>\r\n                <ul className=\"space-y-2\">\r\n                  {companyUsers?.map((u) => (\r\n                    <li\r\n                      key={u.user_id}\r\n                      className=\"flex justify-between items-center bg-white p-2 rounded border\"\r\n                    >\r\n                      <span>{u.user_name}</span>\r\n                      <button\r\n                        onClick={() => handleAssign(todo.todo_id, u.user_id)}\r\n                        className=\"text-xs bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700\"\r\n                      >\r\n                        Assign\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}