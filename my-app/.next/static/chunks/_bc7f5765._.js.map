{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/lib/api.ts"],"sourcesContent":["const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001/api';\r\n\r\nlet accessToken: string | null = null;\r\n\r\n// export function setAccessToken(token: string) {\r\n//   accessToken = token;\r\n// }\r\n\r\n//const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001/api';\r\n\r\n//let accessToken: string | null = null;\r\n\r\nexport function setAccessToken(token: string) {\r\n  accessToken = token;\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.setItem('access_token', token);\r\n  }\r\n}\r\n\r\nfunction getAccessToken(): string | null {\r\n  if (accessToken) return accessToken;\r\n  if (typeof window !== 'undefined') {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n  return null;\r\n}\r\n\r\nasync function fetchWithRetry(\r\n  endpoint: string,\r\n  options: RequestInit,\r\n  retry = true\r\n): Promise<any> {\r\n  const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n    ...options,\r\n    credentials: 'include',\r\n    headers: {\r\n      ...(options.headers || {}),\r\n      ...(getAccessToken() ? { Authorization: `Bearer ${getAccessToken()}` } : {}),\r\n    },\r\n  });\r\n\r\n  if (response.status === 401 && retry) {\r\n    const refreshRes = await fetch(`${API_BASE_URL}/auth/refresh`, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n    });\r\n\r\n    if (refreshRes.ok) {\r\n      const { access_token } = await refreshRes.json();\r\n      setAccessToken(access_token);\r\n      return fetchWithRetry(endpoint, options, false);\r\n    } else {\r\n      localStorage.removeItem('access_token');\r\n      window.location.href = '/login';\r\n      throw new Error('Session expired. Please log in again.');\r\n    }\r\n  }\r\n\r\n  if (!response.ok) {\r\n    let message = `HTTP error! status: ${response.status}`;\r\n    try {\r\n      const errorData = await response.json();\r\n      message = errorData.message || message;\r\n    } catch (_) {}\r\n    throw new Error(message);\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\n\r\n// async function fetchWithRetry(\r\n//   endpoint: string,\r\n//   options: RequestInit,\r\n//   retry = true\r\n// ): Promise<any> {\r\n//   const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n//     ...options,\r\n//     credentials: 'include',\r\n//     headers: {\r\n//       ...(options.headers || {}),\r\n//       ...(accessToken ? { Authorization: `Bearer ${accessToken}` } : {}),\r\n//     },\r\n//   });\r\n\r\n//   if (response.status === 401 && retry) {\r\n//     const refreshRes = await fetch(`${API_BASE_URL}/auth/refresh`, {\r\n//       method: 'POST',\r\n//       credentials: 'include',\r\n//     });\r\n\r\n//     if (refreshRes.ok) {\r\n//       const { access_token } = await refreshRes.json();\r\n//       setAccessToken(access_token);\r\n\r\n//       return fetchWithRetry(endpoint, options, false);\r\n//     } else {\r\n//       throw new Error('Unauthorized and refresh token failed');\r\n//     }\r\n//   }\r\n\r\n//   if (!response.ok) {\r\n//     throw new Error(`HTTP error! status: ${response.status}`);\r\n//   }\r\n\r\n//   return response.json();\r\n// }\r\n\r\nexport const apiClient = {\r\n  get(endpoint: string, /*options?:RequestInit*/) {\r\n    return fetchWithRetry(endpoint, { method: 'GET'/*, ...options*/ });\r\n  },\r\n\r\n  post(endpoint: string, data: any) {\r\n    return fetchWithRetry(endpoint, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  },\r\n\r\n  put(endpoint: string, data: any) {\r\n    return fetchWithRetry(endpoint, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  },\r\n\r\n  patch(endpoint: string, data: any) {\r\n    return fetchWithRetry(endpoint, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  },\r\n\r\n  delete(endpoint: string) {\r\n    return fetchWithRetry(endpoint, { method: 'DELETE' });\r\n  },\r\n};\r\n\r\nexport default apiClient;\r\n"],"names":[],"mappings":";;;;;AAAqB;AAArB,MAAM,eAAe,iEAAmC;AAExD,IAAI,cAA6B;AAU1B,SAAS,eAAe,KAAa;IAC1C,cAAc;IACd,wCAAmC;QACjC,aAAa,OAAO,CAAC,gBAAgB;IACvC;AACF;AAEA,SAAS;IACP,IAAI,aAAa,OAAO;IACxB,wCAAmC;QACjC,OAAO,aAAa,OAAO,CAAC;IAC9B;;AAEF;AAEA,eAAe,eACb,QAAgB,EAChB,OAAoB,EACpB,QAAQ,IAAI;IAEZ,MAAM,WAAW,MAAM,MAAM,GAAG,eAAe,UAAU,EAAE;QACzD,GAAG,OAAO;QACV,aAAa;QACb,SAAS;YACP,GAAI,QAAQ,OAAO,IAAI,CAAC,CAAC;YACzB,GAAI,mBAAmB;gBAAE,eAAe,CAAC,OAAO,EAAE,kBAAkB;YAAC,IAAI,CAAC,CAAC;QAC7E;IACF;IAEA,IAAI,SAAS,MAAM,KAAK,OAAO,OAAO;QACpC,MAAM,aAAa,MAAM,MAAM,GAAG,aAAa,aAAa,CAAC,EAAE;YAC7D,QAAQ;YACR,aAAa;QACf;QAEA,IAAI,WAAW,EAAE,EAAE;YACjB,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,WAAW,IAAI;YAC9C,eAAe;YACf,OAAO,eAAe,UAAU,SAAS;QAC3C,OAAO;YACL,aAAa,UAAU,CAAC;YACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;YACvB,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,IAAI,UAAU,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QACtD,IAAI;YACF,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,UAAU,UAAU,OAAO,IAAI;QACjC,EAAE,OAAO,GAAG,CAAC;QACb,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAwCO,MAAM,YAAY;IACvB,KAAI,QAAgB;QAClB,OAAO,eAAe,UAAU;YAAE,QAAQ,MAAK,cAAc;QAAG;IAClE;IAEA,MAAK,QAAgB,EAAE,IAAS;QAC9B,OAAO,eAAe,UAAU;YAC9B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF;IAEA,KAAI,QAAgB,EAAE,IAAS;QAC7B,OAAO,eAAe,UAAU;YAC9B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF;IAEA,OAAM,QAAgB,EAAE,IAAS;QAC/B,OAAO,eAAe,UAAU;YAC9B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF;IAEA,QAAO,QAAgB;QACrB,OAAO,eAAe,UAAU;YAAE,QAAQ;QAAS;IACrD;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/context/authContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport apiClient, { setAccessToken } from '@/app/lib/api';\r\n\r\ninterface User {\r\n  user_id: number;\r\n  user_name: string;\r\n  password: string;\r\n  phone?: string;\r\n  email: string;\r\n  createdAt?: string;\r\n}\r\n\r\ninterface Task {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  projectId?: number;\r\n}\r\n\r\ninterface AuthData {\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n  phone?: string;\r\n}\r\n\r\ninterface Project {\r\n  project_id: number;\r\n  project_name: string;\r\n  project_description?: string;\r\n  company_id: number;\r\n}\r\n\r\ninterface Company {\r\n  company_id: number;\r\n  company_name: string;\r\n  company_location: string;\r\n  owner_id: number;\r\n}\r\n\r\ninterface Admin {\r\n  type: boolean;\r\n  company: number;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  error: string | null;\r\n  isLoggedIn: boolean;\r\n  setUser: (u: User | null) => void;\r\n  handleLogin: (e: React.FormEvent) => Promise<void>;\r\n  handleLogout: () => Promise<void>;\r\n  handleRegister: (e: React.FormEvent) => Promise<void>;\r\n  checkAuthStatus: () => Promise<void>;\r\n  users: User[];\r\n  fetchUsers: () => Promise<void>;\r\n  updateUser: (e: React.FormEvent) => Promise<void>;\r\n  deleteUser: (id: number) => Promise<void>;\r\n  tasks: Task[];\r\n  fetchTasks: () => Promise<void>;\r\n  createTask: (e: React.FormEvent) => Promise<void>;\r\n  updateTask: (e: React.FormEvent) => Promise<void>;\r\n  deleteTask: (id: number) => Promise<void>;\r\n  authData: AuthData;\r\n  setAuthData: React.Dispatch<React.SetStateAction<AuthData>>;\r\n  projects: Project[];\r\n  setProjects: React.Dispatch<React.SetStateAction<Project[]>>;\r\n  company: Company|null;\r\n  setCompany: (c: Company | null) => void;\r\n  companies: Company[];\r\n  setCompanies: React.Dispatch<React.SetStateAction<Company[]>>;\r\n  project: Project|null;\r\n  setProject: (p: Project|null)=>void;\r\n  isAdmin: Admin|null;\r\n  setIsAdmin: (a: Admin|null)=>void;\r\n  companyProjects: Project[];\r\n  setCompanyProjects: React.Dispatch<React.SetStateAction<Project[]>>;\r\n  companyUsers: User[];\r\n  setCompanyUsers: React.Dispatch<React.SetStateAction<User[]>>;\r\n\r\n  //accessToken: string|null;\r\n  //setAccessToken: (a: string|null)=>void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [authData, setAuthData] = useState<AuthData>({ email: '', password: '', name: '', phone: '' });\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [editingUser, setEditingUser] = useState<User | null>(null);\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [company, setCompany] = useState<Company|null>(null);\r\n  const [project, setProject] = useState<Project|null>(null);\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [isAdmin, setIsAdmin] = useState<Admin|null>(null);\r\n  const [companyProjects, setCompanyProjects] = useState<Project[]>([]);\r\n  const [companyUsers, setCompanyUsers] = useState<User[]>([]);\r\n  //const [accessToken, setAccessToken] = useState<string | null>(null);\r\n\r\n   useEffect(() => {\r\n   const tryRefresh = async () => {\r\n    // try {\r\n    //   const res = await fetch('http://localhost:3001/api/auth/refresh', {\r\n    //     method: 'POST',\r\n    //     credentials: 'include',\r\n    //   });\r\n\r\n\r\n    //   if (!res.ok)\r\n    //   { \r\n    //     console.log(\"Refresh Failed console\");\r\n    //     throw new Error('Refresh failed');\r\n    //   }\r\n    //   const data = await res.json();\r\n    //   const token = data.access_token;\r\n    //   setAccessToken(token);\r\n\r\n    //   const userRes = await fetch('http://localhost:3001/api/auth/profile', {\r\n    //     headers: {\r\n    //       Authorization: `Bearer ${token}`,\r\n    //     },\r\n    //   });\r\n\r\n    //   const userData = await userRes.json();\r\n    //   setUser(userData);\r\n    //   setIsLoggedIn(true);\r\n    // } catch (err) {\r\n    //   console.error('Refresh error:', err);\r\n    //   setUser(null);\r\n    //   setIsLoggedIn(false);\r\n    // }\r\n  };\r\n\r\n  tryRefresh();\r\n  }, []);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      fetchUsers();\r\n      fetchTasks();\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const response = await apiClient.get('/auth/profile');\r\n      setUser(response);\r\n      setIsLoggedIn(true);\r\n    } catch {\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    try {\r\n        e.preventDefault();\r\n        const response = await apiClient.post('/auth/login', {\r\n          email: authData.email,\r\n          password: authData.password,\r\n        });\r\n        setAccessToken(response.access_token);\r\n        console.log(\"Access Token: \", response.access_token);\r\n        console.log(\"Refresh Token: \", response.refresh_token);\r\n        setUser({\r\n          user_id: response.user.user_id,\r\n          user_name: response.user.user_name,\r\n          email: response.user.email,\r\n          phone: response.user.phone,\r\n          password: response.user.password,\r\n        });\r\n        console.log(\"User: \", user);\r\n        setIsLoggedIn(true);\r\n        setAuthData({ email: '', password: '', name: '', phone: '' });\r\n        setError(null);\r\n    } catch (err) {\r\n      setError('Login failed. Please check your credentials.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n  e.preventDefault();\r\n  try {\r\n\r\n    try {\r\n      setLoading(true);\r\n    } catch (error) {\r\n      console.log(\"loading failed\");\r\n    }\r\n    const response = await apiClient.post('/auth/register', {\r\n      user_name: authData.name,\r\n      email: authData.email,\r\n      password: authData.password,\r\n      phone: authData.phone,\r\n    });\r\n\r\n    console.log(\"Response: \", response.user.user_name);\r\n\r\n    //const { access_token, user } = response.data;\r\n\r\n    setAccessToken(response.access_token);\r\n    // try {\r\n    // } catch (error) {\r\n    //   console.log(\"setAccessToken failed\");\r\n    // }\r\n\r\n    setUser({\r\n      user_id: response.user.user_id,\r\n      user_name: response.user.user_name,\r\n      email: response.user.email,\r\n      phone: response.user.phone,\r\n      password: response.user.password,\r\n    });\r\n\r\n    console.log(\"User after register: \", user);\r\n\r\n    setIsLoggedIn(true);\r\n    // try {\r\n    // } catch (error) {\r\n    //   console.log(\"isLoggedIn failed\");\r\n    // }\r\n\r\n    setAuthData({ email: '', password: '', name: '', phone: '' });\r\n    // try {\r\n    // } catch (error) {\r\n    //   console.log(\"setAuthData failed\"); \r\n    // }\r\n\r\n    setError(null);\r\n    // try {\r\n    // } catch (error) {\r\n    //   console.log(\"setError failed\");\r\n    // }\r\n\r\n    //window.location.href = 'http://localhost:3000/dashboard';\r\n  } catch (err) {\r\n    setError('Registration failed. Please try again.');\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n  const handleLogout = async () => {\r\n    await apiClient.post('/auth/logout', {});\r\n    setIsLoggedIn(false);\r\n    setUser(null);\r\n    setUsers([]);\r\n    setTasks([]);\r\n\r\n    window.location.href = 'http://localhost:3000';\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    const data = await apiClient.get('/users');\r\n    setUsers(data);\r\n  };\r\n\r\n  const updateUser = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!editingUser) return;\r\n    const updatedUser = await apiClient.put(`/users/${editingUser.user_id}`, editingUser);\r\n    setUsers((prev) => prev.map((u) => (u.user_id === editingUser.user_id ? updatedUser : u)));\r\n    setEditingUser(null);\r\n  };\r\n\r\n  const deleteUser = async (id: number) => {\r\n    await apiClient.delete(`/users/${id}`);\r\n    setUsers((prev) => prev.filter((u) => u.user_id !== id));\r\n  };\r\n\r\n  const fetchTasks = async () => {\r\n    // const data = await apiClient.get('/tasks');\r\n    // setTasks(data);\r\n  };\r\n\r\n  const createTask = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const task = await apiClient.post('/tasks', { name: 'New Task', description: '...' });\r\n    setTasks((prev) => [...prev, task]);\r\n  };\r\n\r\n  const updateTask = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!editingTask) return;\r\n    const updatedTask = await apiClient.put(`/tasks/${editingTask.id}`, editingTask);\r\n    setTasks((prev) => prev.map((t) => (t.id === editingTask.id ? updatedTask : t)));\r\n    setEditingTask(null);\r\n  };\r\n\r\n  const deleteTask = async (id: number) => {\r\n    await apiClient.delete(`/tasks/${id}`);\r\n    setTasks((prev) => prev.filter((t) => t.id !== id));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n  value={{\r\n    user,\r\n    isLoggedIn,\r\n    setUser,\r\n    handleLogin,\r\n    handleLogout,\r\n    handleRegister,\r\n    checkAuthStatus,\r\n    users,\r\n    fetchUsers,\r\n    updateUser,\r\n    deleteUser,\r\n    tasks,\r\n    fetchTasks,\r\n    createTask,\r\n    updateTask,\r\n    deleteTask,\r\n    error,\r\n    authData,\r\n    setAuthData,\r\n    projects,\r\n    setProjects,\r\n    company,\r\n    setCompany,\r\n    companies,\r\n    setCompanies,\r\n    project,\r\n    setProject,\r\n    isAdmin,\r\n    setIsAdmin,\r\n    companyProjects,\r\n    setCompanyProjects,\r\n    companyUsers,\r\n    setCompanyUsers,\r\n    //accessToken,\r\n    //setAccessToken,\r\n  }}\r\n>\r\n  {children}\r\n</AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth must be used inside <AuthProvider>');\r\n  return context;\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/context/websocketContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useAuth } from './authContext';\r\n\r\ninterface Notification {\r\n  type: 'TODO_ASSIGNED';\r\n  todoId: number;\r\n  projectId: number;\r\n  message: string;\r\n  todoTitle?: string;\r\n  projectName?: string;\r\n  timestamp: string;\r\n  createdAt?: Date;\r\n}\r\n\r\ninterface WebSocketContextType {\r\n  isConnected: boolean;\r\n  notifications: Notification[];\r\n  clearNotifications: () => void;\r\n  markAsRead: (index: number) => void;\r\n}\r\n\r\nconst WebSocketContext = createContext<WebSocketContextType | null>(null);\r\n\r\nexport const WebSocketProvider = ({ children }: { children: ReactNode }) => {\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const { user, isLoggedIn } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn || !user) {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        setSocket(null);\r\n        setIsConnected(false);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Connect to WebSocket server\r\n    const newSocket = io('http://localhost:3001/notifications', {\r\n      query: {\r\n        userId: user.user_id.toString(),\r\n      },\r\n      auth: {\r\n        token: localStorage.getItem('access_token'), // If you store JWT in localStorage\r\n      },\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('🔌 WebSocket connected');\r\n      setIsConnected(true);\r\n      \r\n      // Authenticate with the server\r\n      newSocket.emit('authenticate', {\r\n        userId: user.user_id,\r\n        token: localStorage.getItem('access_token'),\r\n      });\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('🔌 WebSocket disconnected');\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('todoAssigned', (notification: Notification) => {\r\n      console.log('📢 Received todo assignment notification:', notification);\r\n      setNotifications(prev => [notification, ...prev]);\r\n      \r\n      // Show browser notification if permission is granted\r\n      if (Notification.permission === 'granted') {\r\n        new Notification('New Todo Assigned', {\r\n          body: notification.message,\r\n          icon: '/favicon.ico',\r\n        });\r\n      }\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('❌ WebSocket connection error:', error);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [isLoggedIn, user]);\r\n\r\n  const clearNotifications = () => {\r\n    setNotifications([]);\r\n  };\r\n\r\n  const markAsRead = (index: number) => {\r\n    setNotifications(prev => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <WebSocketContext.Provider\r\n      value={{\r\n        isConnected,\r\n        notifications,\r\n        clearNotifications,\r\n        markAsRead,\r\n      }}\r\n    >\r\n      {children}\r\n    </WebSocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useWebSocket = () => {\r\n  const context = useContext(WebSocketContext);\r\n  if (!context) {\r\n    throw new Error('useWebSocket must be used within a WebSocketProvider');\r\n  }\r\n  return context;\r\n};"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;;;AAJA;;;;AAwBA,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAE7D,MAAM,oBAAoB,CAAC,EAAE,QAAQ,EAA2B;;IACrE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACrE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,IAAI,CAAC,cAAc,CAAC,MAAM;gBACxB,IAAI,QAAQ;oBACV,OAAO,UAAU;oBACjB,UAAU;oBACV,eAAe;gBACjB;gBACA;YACF;YAEA,8BAA8B;YAC9B,MAAM,YAAY,CAAA,GAAA,kLAAA,CAAA,KAAE,AAAD,EAAE,uCAAuC;gBAC1D,OAAO;oBACL,QAAQ,KAAK,OAAO,CAAC,QAAQ;gBAC/B;gBACA,MAAM;oBACJ,OAAO,aAAa,OAAO,CAAC;gBAC9B;YACF;YAEA,UAAU,EAAE,CAAC;+CAAW;oBACtB,QAAQ,GAAG,CAAC;oBACZ,eAAe;oBAEf,+BAA+B;oBAC/B,UAAU,IAAI,CAAC,gBAAgB;wBAC7B,QAAQ,KAAK,OAAO;wBACpB,OAAO,aAAa,OAAO,CAAC;oBAC9B;gBACF;;YAEA,UAAU,EAAE,CAAC;+CAAc;oBACzB,QAAQ,GAAG,CAAC;oBACZ,eAAe;gBACjB;;YAEA,UAAU,EAAE,CAAC;+CAAgB,CAAC;oBAC5B,QAAQ,GAAG,CAAC,6CAA6C;oBACzD;uDAAiB,CAAA,OAAQ;gCAAC;mCAAiB;6BAAK;;oBAEhD,qDAAqD;oBACrD,IAAI,aAAa,UAAU,KAAK,WAAW;wBACzC,IAAI,aAAa,qBAAqB;4BACpC,MAAM,aAAa,OAAO;4BAC1B,MAAM;wBACR;oBACF;gBACF;;YAEA,UAAU,EAAE,CAAC;+CAAiB,CAAC;oBAC7B,QAAQ,KAAK,CAAC,iCAAiC;oBAC/C,eAAe;gBACjB;;YAEA,UAAU;YAEV,qBAAqB;YACrB;+CAAO;oBACL,UAAU,UAAU;gBACtB;;QACF;sCAAG;QAAC;QAAY;KAAK;IAErB,MAAM,qBAAqB;QACzB,iBAAiB,EAAE;IACrB;IAEA,MAAM,aAAa,CAAC;QAClB,iBAAiB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IACvD;IAEA,qBACE,6LAAC,iBAAiB,QAAQ;QACxB,OAAO;YACL;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;GAxFa;;QAIkB,0HAAA,CAAA,UAAO;;;KAJzB;AA0FN,MAAM,eAAe;;IAC1B,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}}]
}