{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/task-management/my-app/src/app/dashboard/company/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport apiClient from '../../lib/api';\r\nimport { useAuth } from '../../../../context/authContext';\r\nimport Link from 'next/link';\r\n\r\n// interface Company {\r\n//   company_id: number;\r\n//   company_name: string;\r\n//   company_location?: string;\r\n// }\r\n\r\nexport default function CompaniesPage() {\r\n  const {companies, setCompanies}=useAuth();\r\n  //const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [name, setName] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [formError, setFormError] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { user, isAdmin, setIsAdmin } = useAuth();\r\n  const userId = user?.user_id;\r\n\r\n  // useEffect(() => {\r\n  //   const fetchCompanies = async () => {\r\n  //     try {\r\n  //       const data = await apiClient.get(`/company-members/${userId}`);\r\n  //       setCompanies(data);\r\n\r\n  //       const detailedCompanyPromises = data.map((company: any) =>\r\n  //       apiClient.get(`/company-members/${company.company_id}/${userId}`));\r\n\r\n  //       const detailedCompanyMemberships = await Promise.all(detailedCompanyPromises);\r\n\r\n  //       const isAdminInAny = detailedCompanyPromises.some((company: any) => company.user_role === 'ADMIN');\r\n\r\n  //       companies.map((id)=> id.company_id);\r\n  //       console.log(\"isAdminInAny: \", isAdminInAny);\r\n  //       setIsAdmin(isAdminInAny);\r\n  //       console.log(\"isAdmin: \", isAdmin);\r\n  //     } catch (err) {\r\n  //       setError('Failed to fetch companies');\r\n  //     }\r\n  //   };\r\n\r\n  //   if (userId) {\r\n  //     fetchCompanies();\r\n  //   }\r\n  // }, [userId]);\r\n\r\n//   useEffect(() => {\r\n//   const fetchCompanies = async () => {\r\n//     try {\r\n//       const data = await apiClient.get(`/company-members/${userId}`);\r\n//       setCompanies(data);\r\n\r\n//       // Fetch detailed memberships for each company\r\n//       const detailedCompanyPromises = data.map((company: any) =>\r\n//         apiClient.get(`/company-members/${company.company_id}/${userId}`)\r\n//       );\r\n\r\n//       const detailedCompanyMemberships = await Promise.all(detailedCompanyPromises);\r\n\r\n//       // Check if the user is an admin in any company\r\n//       const isAdminInAny = detailedCompanyMemberships.some(\r\n//         (company: any) => company.user_role === 'ADMIN'\r\n//       );\r\n\r\n//       setIsAdmin(isAdminInAny);\r\n//       console.log(\"isAdminInAny: \", isAdminInAny);\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setError('Failed to fetch companies');\r\n//     }\r\n//   };\r\n\r\n//   if (userId) {\r\n//     fetchCompanies();\r\n//   }\r\n// }, [userId, setCompanies, setIsAdmin]);\r\n\r\n  useEffect(() => {\r\n  const fetchCompanies = async () => {\r\n    try {\r\n      const data = await apiClient.get(`/company-members/${userId}`);\r\n      setCompanies(data);\r\n\r\n      const detailedCompanyPromises = data.map((company: any) =>\r\n        apiClient.get(`/company-members/${company.company_id}/${userId}`)\r\n      );\r\n\r\n      const detailedCompanyMemberships = await Promise.all(detailedCompanyPromises);\r\n\r\n      const adminCompany = detailedCompanyMemberships.find(\r\n        (company: any) => company.user_role === 'ADMIN'\r\n      );\r\n\r\n      if (adminCompany) {\r\n        setIsAdmin({ type: true, company: adminCompany.company_id });\r\n        console.log(\"Admin of company ID:\", adminCompany.company_id);\r\n      } else {\r\n        setIsAdmin({ type: false, company: -1 });\r\n        console.log(\"User is not admin of any company.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Failed to fetch companies');\r\n    }\r\n  };\r\n\r\n  if (userId) {\r\n    fetchCompanies();\r\n  }\r\n}, [userId, setCompanies, setIsAdmin]);\r\n\r\n\r\n\r\n  const handleCreateCompany = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setFormError(null);\r\n    if (!name.trim()) {\r\n      setFormError('Company name is required.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const newCompany = await apiClient.post('/company', {\r\n        company_name: name,\r\n        company_location: location,\r\n        owner_id: user?.user_id,\r\n      });\r\n\r\n      setCompanies((prev) => [...prev, newCompany]);\r\n      console.log(\"Set Companies: \", companies);\r\n      setName('');\r\n      setLocation('');\r\n    } catch (err) {\r\n      setFormError('Failed to create company');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">All Companies</h2>\r\n\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      <ul className=\"space-y-4 mb-6\">\r\n        {companies.map((company) => (\r\n          <Link key={company.company_id} href={`/dashboard/company/${company.company_id}`}>\r\n            <li className=\"p-4 border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition cursor-pointer\">\r\n              <h3 className=\"text-lg font-medium text-green-700\">{company.company_name}</h3>\r\n              <p className=\"text-sm text-gray-600\">\r\n                {company.company_location || 'No location'}\r\n              </p>\r\n            </li>\r\n          </Link>\r\n        ))}\r\n      </ul>\r\n\r\n      <form onSubmit={handleCreateCompany} className=\"space-y-4 border-t pt-6\">\r\n        <h3 className=\"text-xl font-semibold\">Create a New Company</h3>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Company Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Location</label>\r\n          <input\r\n            type=\"text\"\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\r\n          />\r\n        </div>\r\n\r\n        {formError && <p className=\"text-red-500 text-sm\">{formError}</p>}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n        >\r\n          {loading ? 'Creating...' : 'Create Company'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}